extends:
  - eslint:recommended
  - plugin:import/recommended
  - plugin:import/errors
  - plugin:import/warnings
  - plugin:node/recommended-script
  - plugin:promise/recommended
  - standard
parserOptions:
  # Node.js 12 and above almost supports features up to ES2019
  # see https://node.green/#ES2019
  ecmaVersion: 2019
rules:
  import/newline-after-import: error
  import/no-extraneous-dependencies:
    - error
    - devDependencies:
        - "*"
        - ".*"
        - "**/*.test-d.ts"
        - "**/tests/**"
  import/order:
    - error
    - groups:
        - builtin
        - [external, internal]
        - [parent, sibling, index]
        - unknown
      newlines-between: always
      alphabetize:
        order: asc
        caseInsensitive: true
overrides:
  - files: "*.ts"
    extends:
      - plugin:node/recommended-module
      - plugin:@typescript-eslint/recommended
      - plugin:import/typescript
      - standard-with-typescript
    parserOptions:
      sourceType: module
      project:
        - ./packages/*{,/tests{,/helpers},/test-d}/tsconfig.json
        - ./packages/cli/*{,/tests{,/helpers},/test-d}/tsconfig.json
        - ./packages/ts-type-utils/*{,/tests{,/helpers},/test-d}/tsconfig.json
        - ./actions/*{,/tests{,/helpers},/test-d}/tsconfig.json
    settings:
      node:
        # see https://github.com/mysticatea/eslint-plugin-node/blob/v11.1.0/docs/rules/shebang.md
        convertPath:
          src/**/*.ts:
            - ^src/(.+?)\.ts$
            - dist/$1.js
    rules:
      # The "@typescript-eslint/no-floating-promises" rule requires a void operator to be used as a statement.
      # see https://github.com/typescript-eslint/typescript-eslint/blob/v4.21.0/packages/eslint-plugin/docs/rules/no-floating-promises.md
      no-void:
        - error
        - allowAsStatement: true
      # TypeScript checks the import statement path.
      # Therefore, there is no need to verify the file path imported by ESLint.
      node/no-missing-import: off
      # The "node/no-unpublished-import" rule does not support "import type ... from '...'" statements.
      # This causes an error when importing a type definition file that is not published.
      node/no-unpublished-import: off
      # I don't want to use "nodeify" package.
      promise/no-callback-in-promise: off
      # The "@typescript-eslint/strict-boolean-expressions" rule is very strict and stressful.
      "@typescript-eslint/strict-boolean-expressions": off
  - files: "*.d.ts"
    rules:
      # The "no-redeclare" rule does not support namespace and function declarations of the same name.
      # example:
      #   declare function foo(): void;
      #   declare namespace foo { ... } // ESLint: error 'foo' is already defined
      # In addition, as of 2020/06/11, there is no alternative to the "no-redeclare" rule in "@typescript-eslint"
      no-redeclare: off
      # The "@ts-expect-error" comment is not allowed in TypeScript 3.8 or earlier.
      # If someone forks a type definition created in this project, the type definition will not be available in older versions of TypeScript.
      "@typescript-eslint/prefer-ts-expect-error": off
  - files:
      - "**/tests/*.ts"
      - "**/tests/!(helpers!(?))*{,/**}/*.ts"
    extends:
      - plugin:jest/recommended
      - plugin:jest/style
    rules:
      jest/consistent-test-it: error
      jest/lowercase-name: error
      jest/no-deprecated-functions: error
      jest/no-duplicate-hooks: error
      jest/no-if: error
      jest/no-test-return-statement: error
      jest/prefer-spy-on: error
      jest/prefer-strict-equal: error
      jest/prefer-todo: error
      jest/require-top-level-describe: error
      jest/valid-title: error
  - files: "**/examples/**"
    rules:
      node/no-missing-require: off
  - files:
      - .lintstagedrc.js
      - scripts/*.js
    rules:
      import/no-extraneous-dependencies:
        - error
        - devDependencies: true
      node/no-unpublished-require: off
      node/no-unsupported-features/node-builtins:
        - error
        - version: 12.x
  - files: "*"
    extends:
      - prettier
