name: Release
on:
  push:
    branches:
      - main
    tags-ignore:
      - "**"
  workflow_dispatch:
jobs:
  submodules-finder:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.interrogate.outputs.result }}
    steps:
      - uses: actions/checkout@v2
      - id: interrogate
        uses: ./actions/monorepo-workspace-submodules-finder
        with:
          ignore-private: true
  release-please:
    runs-on: ubuntu-latest
    needs: submodules-finder
    strategy:
      fail-fast: false
      matrix:
        include: ${{fromJson(needs.submodules-finder.outputs.result)}}
    steps:
      - uses: GoogleCloudPlatform/release-please-action@v2
        id: release
        with:
          release-type: node
          package-name: ${{ matrix.package-name }}
          path: ${{ matrix.path-git-relative }}
          monorepo-tags: true

        #
        # Commit to PR
        #
      - name: Get PR ref
        id: release-pr
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # https://shogo82148.github.io/blog/2020/10/23/github-bot-using-actions/
        run: |
          PULL_REQUEST="$(gh api "repos/${GITHUB_REPOSITORY}/pulls/${{ steps.release.outputs.pr }}")"
          ref="$(echo "${PULL_REQUEST}" | jq -r '.head.ref')"
          echo "::set-output name=ref::${ref}"
        if: ${{ ! steps.release.outputs.release_created && steps.release.outputs.pr }}
      - uses: actions/checkout@v2
        with:
          ref: ${{ steps.release-pr.outputs.ref }}
          token: ${{ secrets.TRIGGER_TEST_GITHUB_TOKEN }}
        if: ${{ steps.release-pr.outputs.ref }}
      - name: Push to PR
        run: |
          git config user.name  'GitHub'
          git config user.email 'noreply@github.com'
          git commit --allow-empty --author='github-actions[bot] <release-workflow+github-actions[bot]@users.noreply.github.com>' -m 'chore: trigger tests'
          git push
        if: ${{ steps.release-pr.outputs.ref }}

        #
        # Publish
        #
      - uses: actions/checkout@v2
        if: ${{ steps.release.outputs.release_created }}
      - uses: actions/setup-node@v2
        with:
          node-version: 12.x
          registry-url: https://registry.npmjs.org
          # Note: The `registry-url` option is required.
          #       If this option is not set, the "npm publish" command will not detect the environment variable NODE_AUTH_TOKEN.
        if: ${{ steps.release.outputs.release_created }}
      - name: Cache .pnpm-store
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-node-12.x-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-12.x-
            ${{ runner.os }}-node-
            ${{ runner.os }}-
        if: ${{ steps.release.outputs.release_created }}
      - uses: ./actions/setup-pnpm
        if: ${{ steps.release.outputs.release_created }}
      - run: pnpm install
        if: ${{ steps.release.outputs.release_created }}
      - run: pnpx ultra --recursive --filter '+${{ matrix.path-git-relative }}' --build pnpm run --if-present build
        # If there are other submodules in the dependency, it may be necessary to build the dependent submodule.
        # Therefore, build only the submodules included in the required dependencies.
        #
        # Note: If the "build" script does not exist in the npm-scripts, the ultra-runner will attempt to execute the "build" command.
        #       And since the "build" command does not exist, the execution will fail.
        #       For this reason, use the "pnpm run" command and always run "build" in npm-scripts.
        #       If the "--if-present" option is added, no error will occur even if the "build" script does not exist.
        #
        # Note: DO NOT add the "--if-present" option to the end of the command.
        #       Execution by ultra-runner will fail.
        if: ${{ steps.release.outputs.release_created }}
      - name: publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
        run: |
          readonly CUSTOM_PUBLISH_SCRIPT_PATH=.github/workflows/publish.sh

          cd '${{ matrix.path-git-relative }}'
          if [ -x "${CUSTOM_PUBLISH_SCRIPT_PATH}" ]; then
            GITHUB_TOKEN='${{ secrets.GITHUB_TOKEN }}'
            matrix_package_name='${{ matrix.package-name }}'
            outputs_upload_url='${{ steps.release.outputs.upload_url }}'
            outputs_html_url='${{ steps.release.outputs.html_url }}'
            outputs_tag_name='${{ steps.release.outputs.tag_name }}'
            outputs_major='${{ steps.release.outputs.major }}'
            outputs_minor='${{ steps.release.outputs.minor }}'
            outputs_patch='${{ steps.release.outputs.patch }}'
            outputs_sha='${{ steps.release.outputs.sha }}'
            outputs_pr='${{ steps.release.outputs.pr }}'
            echo loading "${CUSTOM_PUBLISH_SCRIPT_PATH}"
            source "${CUSTOM_PUBLISH_SCRIPT_PATH}"
          else
            pnpm publish --access=public
          fi
        shell: bash
        if: ${{ steps.release.outputs.release_created }}
