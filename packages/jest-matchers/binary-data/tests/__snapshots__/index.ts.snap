// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`.toBeByteSize() fail expect(actual = 0).not.toBeByteSize(expected = 0) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <green>0 B</>
Received:     <red>0 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 0).not.toBeByteSize(expected = 0n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <green>0 B</>
Received:     <red>0 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 0).toBeByteSize(expected = 1) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 B</>
Received: <red>0 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 0).toBeByteSize(expected = 1n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 B</>
Received: <red>0 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 0).toBeByteSize(expected = 1024) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 KiB (1024 B)</>
Received: <red>0 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 0).toBeByteSize(expected = 1024n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 KiB (1024 B)</>
Received: <red>0 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 0).toBeByteSize(expected = 1048576) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 MiB (1048576 B)</>
Received: <red>0 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 0).toBeByteSize(expected = 1048576n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 MiB (1048576 B)</>
Received: <red>0 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 0).toBeByteSize(expected = 1073741824) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 GiB (1073741824 B)</>
Received: <red>0 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 0).toBeByteSize(expected = 1073741824n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 GiB (1073741824 B)</>
Received: <red>0 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 0).toBeByteSize(expected = 1099511627776) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 TiB (1099511627776 B)</>
Received: <red>0 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 0).toBeByteSize(expected = 1099511627776n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 TiB (1099511627776 B)</>
Received: <red>0 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 0).toBeByteSize(expected = 1125899906842624) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 PiB (1125899906842624 B)</>
Received: <red>0 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 0).toBeByteSize(expected = 1125899906842624n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 PiB (1125899906842624 B)</>
Received: <red>0 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 0n).not.toBeByteSize(expected = 0) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <green>0 B</>
Received:     <red>0 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 0n).not.toBeByteSize(expected = 0n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <green>0 B</>
Received:     <red>0 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 0n).toBeByteSize(expected = 1) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 B</>
Received: <red>0 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 0n).toBeByteSize(expected = 1n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 B</>
Received: <red>0 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 0n).toBeByteSize(expected = 1024) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 KiB (1024 B)</>
Received: <red>0 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 0n).toBeByteSize(expected = 1024n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 KiB (1024 B)</>
Received: <red>0 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 0n).toBeByteSize(expected = 1048576) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 MiB (1048576 B)</>
Received: <red>0 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 0n).toBeByteSize(expected = 1048576n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 MiB (1048576 B)</>
Received: <red>0 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 0n).toBeByteSize(expected = 1073741824) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 GiB (1073741824 B)</>
Received: <red>0 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 0n).toBeByteSize(expected = 1073741824n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 GiB (1073741824 B)</>
Received: <red>0 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 0n).toBeByteSize(expected = 1099511627776) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 TiB (1099511627776 B)</>
Received: <red>0 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 0n).toBeByteSize(expected = 1099511627776n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 TiB (1099511627776 B)</>
Received: <red>0 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 0n).toBeByteSize(expected = 1125899906842624) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 PiB (1125899906842624 B)</>
Received: <red>0 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 0n).toBeByteSize(expected = 1125899906842624n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 PiB (1125899906842624 B)</>
Received: <red>0 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1).not.toBeByteSize(expected = 1) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <green>1 B</>
Received:     <red>1 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1).not.toBeByteSize(expected = 1n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <green>1 B</>
Received:     <red>1 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1).toBeByteSize(expected = 0) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>0 B</>
Received: <red>1 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1).toBeByteSize(expected = 0n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>0 B</>
Received: <red>1 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1).toBeByteSize(expected = 1024) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 KiB (1024 B)</>
Received: <red>1 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1).toBeByteSize(expected = 1024n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 KiB (1024 B)</>
Received: <red>1 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1).toBeByteSize(expected = 1048576) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 MiB (1048576 B)</>
Received: <red>1 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1).toBeByteSize(expected = 1048576n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 MiB (1048576 B)</>
Received: <red>1 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1).toBeByteSize(expected = 1073741824) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 GiB (1073741824 B)</>
Received: <red>1 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1).toBeByteSize(expected = 1073741824n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 GiB (1073741824 B)</>
Received: <red>1 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1).toBeByteSize(expected = 1099511627776) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 TiB (1099511627776 B)</>
Received: <red>1 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1).toBeByteSize(expected = 1099511627776n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 TiB (1099511627776 B)</>
Received: <red>1 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1).toBeByteSize(expected = 1125899906842624) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 PiB (1125899906842624 B)</>
Received: <red>1 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1).toBeByteSize(expected = 1125899906842624n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 PiB (1125899906842624 B)</>
Received: <red>1 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1n).not.toBeByteSize(expected = 1) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <green>1 B</>
Received:     <red>1 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1n).not.toBeByteSize(expected = 1n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <green>1 B</>
Received:     <red>1 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1n).toBeByteSize(expected = 0) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>0 B</>
Received: <red>1 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1n).toBeByteSize(expected = 0n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>0 B</>
Received: <red>1 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1n).toBeByteSize(expected = 1024) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 KiB (1024 B)</>
Received: <red>1 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1n).toBeByteSize(expected = 1024n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 KiB (1024 B)</>
Received: <red>1 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1n).toBeByteSize(expected = 1048576) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 MiB (1048576 B)</>
Received: <red>1 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1n).toBeByteSize(expected = 1048576n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 MiB (1048576 B)</>
Received: <red>1 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1n).toBeByteSize(expected = 1073741824) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 GiB (1073741824 B)</>
Received: <red>1 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1n).toBeByteSize(expected = 1073741824n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 GiB (1073741824 B)</>
Received: <red>1 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1n).toBeByteSize(expected = 1099511627776) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 TiB (1099511627776 B)</>
Received: <red>1 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1n).toBeByteSize(expected = 1099511627776n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 TiB (1099511627776 B)</>
Received: <red>1 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1n).toBeByteSize(expected = 1125899906842624) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 PiB (1125899906842624 B)</>
Received: <red>1 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1n).toBeByteSize(expected = 1125899906842624n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 PiB (1125899906842624 B)</>
Received: <red>1 B</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1024).not.toBeByteSize(expected = 1024) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <green>1 KiB (1024 B)</>
Received:     <red>1 KiB (1024 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1024).not.toBeByteSize(expected = 1024n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <green>1 KiB (1024 B)</>
Received:     <red>1 KiB (1024 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1024).toBeByteSize(expected = 0) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>0 B</>
Received: <red>1 KiB (1024 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1024).toBeByteSize(expected = 0n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>0 B</>
Received: <red>1 KiB (1024 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1024).toBeByteSize(expected = 1) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 B</>
Received: <red>1 KiB (1024 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1024).toBeByteSize(expected = 1n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 B</>
Received: <red>1 KiB (1024 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1024).toBeByteSize(expected = 1048576) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 MiB (1048576 B)</>
Received: <red>1 KiB (1024 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1024).toBeByteSize(expected = 1048576n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 MiB (1048576 B)</>
Received: <red>1 KiB (1024 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1024).toBeByteSize(expected = 1073741824) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 GiB (1073741824 B)</>
Received: <red>1 KiB (1024 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1024).toBeByteSize(expected = 1073741824n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 GiB (1073741824 B)</>
Received: <red>1 KiB (1024 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1024).toBeByteSize(expected = 1099511627776) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 TiB (1099511627776 B)</>
Received: <red>1 KiB (1024 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1024).toBeByteSize(expected = 1099511627776n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 TiB (1099511627776 B)</>
Received: <red>1 KiB (1024 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1024).toBeByteSize(expected = 1125899906842624) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 PiB (1125899906842624 B)</>
Received: <red>1 KiB (1024 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1024).toBeByteSize(expected = 1125899906842624n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 PiB (1125899906842624 B)</>
Received: <red>1 KiB (1024 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1024n).not.toBeByteSize(expected = 1024) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <green>1 KiB (1024 B)</>
Received:     <red>1 KiB (1024 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1024n).not.toBeByteSize(expected = 1024n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <green>1 KiB (1024 B)</>
Received:     <red>1 KiB (1024 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1024n).toBeByteSize(expected = 0) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>0 B</>
Received: <red>1 KiB (1024 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1024n).toBeByteSize(expected = 0n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>0 B</>
Received: <red>1 KiB (1024 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1024n).toBeByteSize(expected = 1) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 B</>
Received: <red>1 KiB (1024 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1024n).toBeByteSize(expected = 1n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 B</>
Received: <red>1 KiB (1024 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1024n).toBeByteSize(expected = 1048576) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 MiB (1048576 B)</>
Received: <red>1 KiB (1024 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1024n).toBeByteSize(expected = 1048576n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 MiB (1048576 B)</>
Received: <red>1 KiB (1024 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1024n).toBeByteSize(expected = 1073741824) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 GiB (1073741824 B)</>
Received: <red>1 KiB (1024 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1024n).toBeByteSize(expected = 1073741824n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 GiB (1073741824 B)</>
Received: <red>1 KiB (1024 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1024n).toBeByteSize(expected = 1099511627776) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 TiB (1099511627776 B)</>
Received: <red>1 KiB (1024 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1024n).toBeByteSize(expected = 1099511627776n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 TiB (1099511627776 B)</>
Received: <red>1 KiB (1024 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1024n).toBeByteSize(expected = 1125899906842624) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 PiB (1125899906842624 B)</>
Received: <red>1 KiB (1024 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1024n).toBeByteSize(expected = 1125899906842624n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 PiB (1125899906842624 B)</>
Received: <red>1 KiB (1024 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1048576).not.toBeByteSize(expected = 1048576) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <green>1 MiB (1048576 B)</>
Received:     <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1048576).not.toBeByteSize(expected = 1048576n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <green>1 MiB (1048576 B)</>
Received:     <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1048576).toBeByteSize(expected = 0) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>0 B</>
Received: <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1048576).toBeByteSize(expected = 0n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>0 B</>
Received: <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1048576).toBeByteSize(expected = 1) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 B</>
Received: <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1048576).toBeByteSize(expected = 1n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 B</>
Received: <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1048576).toBeByteSize(expected = 1024) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 KiB (1024 B)</>
Received: <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1048576).toBeByteSize(expected = 1024n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 KiB (1024 B)</>
Received: <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1048576).toBeByteSize(expected = 1073741824) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 GiB (1073741824 B)</>
Received: <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1048576).toBeByteSize(expected = 1073741824n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 GiB (1073741824 B)</>
Received: <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1048576).toBeByteSize(expected = 1099511627776) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 TiB (1099511627776 B)</>
Received: <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1048576).toBeByteSize(expected = 1099511627776n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 TiB (1099511627776 B)</>
Received: <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1048576).toBeByteSize(expected = 1125899906842624) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 PiB (1125899906842624 B)</>
Received: <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1048576).toBeByteSize(expected = 1125899906842624n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 PiB (1125899906842624 B)</>
Received: <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1048576n).not.toBeByteSize(expected = 1048576) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <green>1 MiB (1048576 B)</>
Received:     <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1048576n).not.toBeByteSize(expected = 1048576n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <green>1 MiB (1048576 B)</>
Received:     <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1048576n).toBeByteSize(expected = 0) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>0 B</>
Received: <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1048576n).toBeByteSize(expected = 0n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>0 B</>
Received: <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1048576n).toBeByteSize(expected = 1) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 B</>
Received: <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1048576n).toBeByteSize(expected = 1n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 B</>
Received: <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1048576n).toBeByteSize(expected = 1024) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 KiB (1024 B)</>
Received: <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1048576n).toBeByteSize(expected = 1024n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 KiB (1024 B)</>
Received: <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1048576n).toBeByteSize(expected = 1073741824) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 GiB (1073741824 B)</>
Received: <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1048576n).toBeByteSize(expected = 1073741824n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 GiB (1073741824 B)</>
Received: <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1048576n).toBeByteSize(expected = 1099511627776) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 TiB (1099511627776 B)</>
Received: <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1048576n).toBeByteSize(expected = 1099511627776n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 TiB (1099511627776 B)</>
Received: <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1048576n).toBeByteSize(expected = 1125899906842624) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 PiB (1125899906842624 B)</>
Received: <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1048576n).toBeByteSize(expected = 1125899906842624n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 PiB (1125899906842624 B)</>
Received: <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1073741824).not.toBeByteSize(expected = 1073741824) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <green>1 GiB (1073741824 B)</>
Received:     <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1073741824).not.toBeByteSize(expected = 1073741824n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <green>1 GiB (1073741824 B)</>
Received:     <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1073741824).toBeByteSize(expected = 0) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>0 B</>
Received: <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1073741824).toBeByteSize(expected = 0n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>0 B</>
Received: <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1073741824).toBeByteSize(expected = 1) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 B</>
Received: <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1073741824).toBeByteSize(expected = 1n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 B</>
Received: <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1073741824).toBeByteSize(expected = 1024) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 KiB (1024 B)</>
Received: <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1073741824).toBeByteSize(expected = 1024n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 KiB (1024 B)</>
Received: <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1073741824).toBeByteSize(expected = 1048576) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 MiB (1048576 B)</>
Received: <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1073741824).toBeByteSize(expected = 1048576n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 MiB (1048576 B)</>
Received: <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1073741824).toBeByteSize(expected = 1099511627776) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 TiB (1099511627776 B)</>
Received: <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1073741824).toBeByteSize(expected = 1099511627776n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 TiB (1099511627776 B)</>
Received: <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1073741824).toBeByteSize(expected = 1125899906842624) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 PiB (1125899906842624 B)</>
Received: <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1073741824).toBeByteSize(expected = 1125899906842624n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 PiB (1125899906842624 B)</>
Received: <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1073741824n).not.toBeByteSize(expected = 1073741824) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <green>1 GiB (1073741824 B)</>
Received:     <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1073741824n).not.toBeByteSize(expected = 1073741824n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <green>1 GiB (1073741824 B)</>
Received:     <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1073741824n).toBeByteSize(expected = 0) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>0 B</>
Received: <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1073741824n).toBeByteSize(expected = 0n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>0 B</>
Received: <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1073741824n).toBeByteSize(expected = 1) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 B</>
Received: <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1073741824n).toBeByteSize(expected = 1n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 B</>
Received: <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1073741824n).toBeByteSize(expected = 1024) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 KiB (1024 B)</>
Received: <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1073741824n).toBeByteSize(expected = 1024n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 KiB (1024 B)</>
Received: <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1073741824n).toBeByteSize(expected = 1048576) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 MiB (1048576 B)</>
Received: <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1073741824n).toBeByteSize(expected = 1048576n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 MiB (1048576 B)</>
Received: <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1073741824n).toBeByteSize(expected = 1099511627776) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 TiB (1099511627776 B)</>
Received: <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1073741824n).toBeByteSize(expected = 1099511627776n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 TiB (1099511627776 B)</>
Received: <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1073741824n).toBeByteSize(expected = 1125899906842624) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 PiB (1125899906842624 B)</>
Received: <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1073741824n).toBeByteSize(expected = 1125899906842624n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 PiB (1125899906842624 B)</>
Received: <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1099511627776).not.toBeByteSize(expected = 1099511627776) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <green>1 TiB (1099511627776 B)</>
Received:     <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1099511627776).not.toBeByteSize(expected = 1099511627776n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <green>1 TiB (1099511627776 B)</>
Received:     <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1099511627776).toBeByteSize(expected = 0) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>0 B</>
Received: <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1099511627776).toBeByteSize(expected = 0n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>0 B</>
Received: <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1099511627776).toBeByteSize(expected = 1) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 B</>
Received: <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1099511627776).toBeByteSize(expected = 1n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 B</>
Received: <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1099511627776).toBeByteSize(expected = 1024) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 KiB (1024 B)</>
Received: <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1099511627776).toBeByteSize(expected = 1024n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 KiB (1024 B)</>
Received: <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1099511627776).toBeByteSize(expected = 1048576) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 MiB (1048576 B)</>
Received: <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1099511627776).toBeByteSize(expected = 1048576n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 MiB (1048576 B)</>
Received: <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1099511627776).toBeByteSize(expected = 1073741824) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 GiB (1073741824 B)</>
Received: <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1099511627776).toBeByteSize(expected = 1073741824n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 GiB (1073741824 B)</>
Received: <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1099511627776).toBeByteSize(expected = 1125899906842624) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 PiB (1125899906842624 B)</>
Received: <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1099511627776).toBeByteSize(expected = 1125899906842624n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 PiB (1125899906842624 B)</>
Received: <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1099511627776n).not.toBeByteSize(expected = 1099511627776) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <green>1 TiB (1099511627776 B)</>
Received:     <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1099511627776n).not.toBeByteSize(expected = 1099511627776n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <green>1 TiB (1099511627776 B)</>
Received:     <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1099511627776n).toBeByteSize(expected = 0) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>0 B</>
Received: <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1099511627776n).toBeByteSize(expected = 0n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>0 B</>
Received: <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1099511627776n).toBeByteSize(expected = 1) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 B</>
Received: <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1099511627776n).toBeByteSize(expected = 1n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 B</>
Received: <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1099511627776n).toBeByteSize(expected = 1024) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 KiB (1024 B)</>
Received: <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1099511627776n).toBeByteSize(expected = 1024n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 KiB (1024 B)</>
Received: <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1099511627776n).toBeByteSize(expected = 1048576) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 MiB (1048576 B)</>
Received: <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1099511627776n).toBeByteSize(expected = 1048576n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 MiB (1048576 B)</>
Received: <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1099511627776n).toBeByteSize(expected = 1073741824) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 GiB (1073741824 B)</>
Received: <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1099511627776n).toBeByteSize(expected = 1073741824n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 GiB (1073741824 B)</>
Received: <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1099511627776n).toBeByteSize(expected = 1125899906842624) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 PiB (1125899906842624 B)</>
Received: <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1099511627776n).toBeByteSize(expected = 1125899906842624n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 PiB (1125899906842624 B)</>
Received: <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1125899906842624).not.toBeByteSize(expected = 1125899906842624) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <green>1 PiB (1125899906842624 B)</>
Received:     <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1125899906842624).not.toBeByteSize(expected = 1125899906842624n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <green>1 PiB (1125899906842624 B)</>
Received:     <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1125899906842624).toBeByteSize(expected = 0) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>0 B</>
Received: <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1125899906842624).toBeByteSize(expected = 0n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>0 B</>
Received: <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1125899906842624).toBeByteSize(expected = 1) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 B</>
Received: <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1125899906842624).toBeByteSize(expected = 1n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 B</>
Received: <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1125899906842624).toBeByteSize(expected = 1024) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 KiB (1024 B)</>
Received: <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1125899906842624).toBeByteSize(expected = 1024n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 KiB (1024 B)</>
Received: <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1125899906842624).toBeByteSize(expected = 1048576) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 MiB (1048576 B)</>
Received: <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1125899906842624).toBeByteSize(expected = 1048576n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 MiB (1048576 B)</>
Received: <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1125899906842624).toBeByteSize(expected = 1073741824) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 GiB (1073741824 B)</>
Received: <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1125899906842624).toBeByteSize(expected = 1073741824n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 GiB (1073741824 B)</>
Received: <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1125899906842624).toBeByteSize(expected = 1099511627776) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 TiB (1099511627776 B)</>
Received: <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1125899906842624).toBeByteSize(expected = 1099511627776n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 TiB (1099511627776 B)</>
Received: <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1125899906842624n).not.toBeByteSize(expected = 1125899906842624) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <green>1 PiB (1125899906842624 B)</>
Received:     <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1125899906842624n).not.toBeByteSize(expected = 1125899906842624n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <green>1 PiB (1125899906842624 B)</>
Received:     <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1125899906842624n).toBeByteSize(expected = 0) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>0 B</>
Received: <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1125899906842624n).toBeByteSize(expected = 0n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>0 B</>
Received: <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1125899906842624n).toBeByteSize(expected = 1) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 B</>
Received: <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1125899906842624n).toBeByteSize(expected = 1n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 B</>
Received: <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1125899906842624n).toBeByteSize(expected = 1024) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 KiB (1024 B)</>
Received: <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1125899906842624n).toBeByteSize(expected = 1024n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 KiB (1024 B)</>
Received: <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1125899906842624n).toBeByteSize(expected = 1048576) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 MiB (1048576 B)</>
Received: <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1125899906842624n).toBeByteSize(expected = 1048576n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 MiB (1048576 B)</>
Received: <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1125899906842624n).toBeByteSize(expected = 1073741824) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 GiB (1073741824 B)</>
Received: <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1125899906842624n).toBeByteSize(expected = 1073741824n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 GiB (1073741824 B)</>
Received: <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1125899906842624n).toBeByteSize(expected = 1099511627776) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 TiB (1099511627776 B)</>
Received: <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeByteSize() fail expect(actual = 1125899906842624n).toBeByteSize(expected = 1099511627776n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeByteSize<dim>(</><green>expected</><dim>)</>

Expected: <green>1 TiB (1099511627776 B)</>
Received: <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(actual = 0).toBeGreaterThanByteSize(expected = 0) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>0 B</>
Received:   <red>0 B</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(actual = 0).toBeGreaterThanByteSize(expected = 0n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>0 B</>
Received:   <red>0 B</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(actual = 0n).toBeGreaterThanByteSize(expected = 0) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>0 B</>
Received:   <red>0 B</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(actual = 0n).toBeGreaterThanByteSize(expected = 0n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>0 B</>
Received:   <red>0 B</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(actual = 1).toBeGreaterThanByteSize(expected = 1) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 B</>
Received:   <red>1 B</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(actual = 1).toBeGreaterThanByteSize(expected = 1n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 B</>
Received:   <red>1 B</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(actual = 1n).toBeGreaterThanByteSize(expected = 1) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 B</>
Received:   <red>1 B</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(actual = 1n).toBeGreaterThanByteSize(expected = 1n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 B</>
Received:   <red>1 B</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(actual = 1024).toBeGreaterThanByteSize(expected = 1024) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 KiB (1024 B)</>
Received:   <red>1 KiB (1024 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(actual = 1024).toBeGreaterThanByteSize(expected = 1024n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 KiB (1024 B)</>
Received:   <red>1 KiB (1024 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(actual = 1024n).toBeGreaterThanByteSize(expected = 1024) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 KiB (1024 B)</>
Received:   <red>1 KiB (1024 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(actual = 1024n).toBeGreaterThanByteSize(expected = 1024n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 KiB (1024 B)</>
Received:   <red>1 KiB (1024 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(actual = 1048576).toBeGreaterThanByteSize(expected = 1048576) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 MiB (1048576 B)</>
Received:   <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(actual = 1048576).toBeGreaterThanByteSize(expected = 1048576n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 MiB (1048576 B)</>
Received:   <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(actual = 1048576n).toBeGreaterThanByteSize(expected = 1048576) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 MiB (1048576 B)</>
Received:   <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(actual = 1048576n).toBeGreaterThanByteSize(expected = 1048576n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 MiB (1048576 B)</>
Received:   <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(actual = 1073741824).toBeGreaterThanByteSize(expected = 1073741824) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 GiB (1073741824 B)</>
Received:   <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(actual = 1073741824).toBeGreaterThanByteSize(expected = 1073741824n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 GiB (1073741824 B)</>
Received:   <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(actual = 1073741824n).toBeGreaterThanByteSize(expected = 1073741824) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 GiB (1073741824 B)</>
Received:   <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(actual = 1073741824n).toBeGreaterThanByteSize(expected = 1073741824n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 GiB (1073741824 B)</>
Received:   <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(actual = 1099511627776).toBeGreaterThanByteSize(expected = 1099511627776) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 TiB (1099511627776 B)</>
Received:   <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(actual = 1099511627776).toBeGreaterThanByteSize(expected = 1099511627776n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 TiB (1099511627776 B)</>
Received:   <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(actual = 1099511627776n).toBeGreaterThanByteSize(expected = 1099511627776) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 TiB (1099511627776 B)</>
Received:   <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(actual = 1099511627776n).toBeGreaterThanByteSize(expected = 1099511627776n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 TiB (1099511627776 B)</>
Received:   <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(actual = 1125899906842624).toBeGreaterThanByteSize(expected = 1125899906842624) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 PiB (1125899906842624 B)</>
Received:   <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(actual = 1125899906842624).toBeGreaterThanByteSize(expected = 1125899906842624n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 PiB (1125899906842624 B)</>
Received:   <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(actual = 1125899906842624n).toBeGreaterThanByteSize(expected = 1125899906842624) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 PiB (1125899906842624 B)</>
Received:   <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(actual = 1125899906842624n).toBeGreaterThanByteSize(expected = 1125899906842624n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 PiB (1125899906842624 B)</>
Received:   <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(big = 2).not.toBeGreaterThanByteSize(small = 1) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not > <green>1 B</>
Received:       <red>2 B</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(big = 2).not.toBeGreaterThanByteSize(small = 1n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not > <green>1 B</>
Received:       <red>2 B</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(big = 2n).not.toBeGreaterThanByteSize(small = 1) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not > <green>1 B</>
Received:       <red>2 B</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(big = 2n).not.toBeGreaterThanByteSize(small = 1n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not > <green>1 B</>
Received:       <red>2 B</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(big = 1024).not.toBeGreaterThanByteSize(small = 1023) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not > <green>1023 B</>
Received:       <red>1 KiB (1024 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(big = 1024).not.toBeGreaterThanByteSize(small = 1023n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not > <green>1023 B</>
Received:       <red>1 KiB (1024 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(big = 1024n).not.toBeGreaterThanByteSize(small = 1023) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not > <green>1023 B</>
Received:       <red>1 KiB (1024 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(big = 1024n).not.toBeGreaterThanByteSize(small = 1023n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not > <green>1023 B</>
Received:       <red>1 KiB (1024 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(big = 1048576).not.toBeGreaterThanByteSize(small = 1048575) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not > <green>1024 KiB (1048575 B)</>
Received:       <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(big = 1048576).not.toBeGreaterThanByteSize(small = 1048575n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not > <green>1024 KiB (1048575 B)</>
Received:       <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(big = 1048576n).not.toBeGreaterThanByteSize(small = 1048575) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not > <green>1024 KiB (1048575 B)</>
Received:       <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(big = 1048576n).not.toBeGreaterThanByteSize(small = 1048575n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not > <green>1024 KiB (1048575 B)</>
Received:       <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(big = 1073741824).not.toBeGreaterThanByteSize(small = 1073741823) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not > <green>1024 MiB (1073741823 B)</>
Received:       <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(big = 1073741824).not.toBeGreaterThanByteSize(small = 1073741823n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not > <green>1024 MiB (1073741823 B)</>
Received:       <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(big = 1073741824n).not.toBeGreaterThanByteSize(small = 1073741823) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not > <green>1024 MiB (1073741823 B)</>
Received:       <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(big = 1073741824n).not.toBeGreaterThanByteSize(small = 1073741823n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not > <green>1024 MiB (1073741823 B)</>
Received:       <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(big = 1099511627776).not.toBeGreaterThanByteSize(small = 1099511627775) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not > <green>1024 GiB (1099511627775 B)</>
Received:       <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(big = 1099511627776).not.toBeGreaterThanByteSize(small = 1099511627775n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not > <green>1024 GiB (1099511627775 B)</>
Received:       <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(big = 1099511627776n).not.toBeGreaterThanByteSize(small = 1099511627775) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not > <green>1024 GiB (1099511627775 B)</>
Received:       <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(big = 1099511627776n).not.toBeGreaterThanByteSize(small = 1099511627775n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not > <green>1024 GiB (1099511627775 B)</>
Received:       <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(big = 9007199254740991).not.toBeGreaterThanByteSize(small = 9007199254740990) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not > <green>8 PiB (9007199254740990 B)</>
Received:       <red>8 PiB (9007199254740991 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(big = 9007199254740991).not.toBeGreaterThanByteSize(small = 9007199254740990n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not > <green>8 PiB (9007199254740990 B)</>
Received:       <red>8 PiB (9007199254740991 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(big = 9007199254740991n).not.toBeGreaterThanByteSize(small = 9007199254740990) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not > <green>8 PiB (9007199254740990 B)</>
Received:       <red>8 PiB (9007199254740991 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(big = 9007199254740991n).not.toBeGreaterThanByteSize(small = 9007199254740990n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not > <green>8 PiB (9007199254740990 B)</>
Received:       <red>8 PiB (9007199254740991 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(small = 1).toBeGreaterThanByteSize(big = 2) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>2 B</>
Received:   <red>1 B</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(small = 1).toBeGreaterThanByteSize(big = 2n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>2 B</>
Received:   <red>1 B</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(small = 1n).toBeGreaterThanByteSize(big = 2) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>2 B</>
Received:   <red>1 B</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(small = 1n).toBeGreaterThanByteSize(big = 2n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>2 B</>
Received:   <red>1 B</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(small = 1023).toBeGreaterThanByteSize(big = 1024) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 KiB (1024 B)</>
Received:   <red>1023 B</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(small = 1023).toBeGreaterThanByteSize(big = 1024n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 KiB (1024 B)</>
Received:   <red>1023 B</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(small = 1023n).toBeGreaterThanByteSize(big = 1024) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 KiB (1024 B)</>
Received:   <red>1023 B</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(small = 1023n).toBeGreaterThanByteSize(big = 1024n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 KiB (1024 B)</>
Received:   <red>1023 B</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(small = 1048575).toBeGreaterThanByteSize(big = 1048576) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 MiB (1048576 B)</>
Received:   <red>1024 KiB (1048575 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(small = 1048575).toBeGreaterThanByteSize(big = 1048576n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 MiB (1048576 B)</>
Received:   <red>1024 KiB (1048575 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(small = 1048575n).toBeGreaterThanByteSize(big = 1048576) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 MiB (1048576 B)</>
Received:   <red>1024 KiB (1048575 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(small = 1048575n).toBeGreaterThanByteSize(big = 1048576n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 MiB (1048576 B)</>
Received:   <red>1024 KiB (1048575 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(small = 1073741823).toBeGreaterThanByteSize(big = 1073741824) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 GiB (1073741824 B)</>
Received:   <red>1024 MiB (1073741823 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(small = 1073741823).toBeGreaterThanByteSize(big = 1073741824n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 GiB (1073741824 B)</>
Received:   <red>1024 MiB (1073741823 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(small = 1073741823n).toBeGreaterThanByteSize(big = 1073741824) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 GiB (1073741824 B)</>
Received:   <red>1024 MiB (1073741823 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(small = 1073741823n).toBeGreaterThanByteSize(big = 1073741824n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 GiB (1073741824 B)</>
Received:   <red>1024 MiB (1073741823 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(small = 1099511627775).toBeGreaterThanByteSize(big = 1099511627776) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 TiB (1099511627776 B)</>
Received:   <red>1024 GiB (1099511627775 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(small = 1099511627775).toBeGreaterThanByteSize(big = 1099511627776n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 TiB (1099511627776 B)</>
Received:   <red>1024 GiB (1099511627775 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(small = 1099511627775n).toBeGreaterThanByteSize(big = 1099511627776) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 TiB (1099511627776 B)</>
Received:   <red>1024 GiB (1099511627775 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(small = 1099511627775n).toBeGreaterThanByteSize(big = 1099511627776n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>1 TiB (1099511627776 B)</>
Received:   <red>1024 GiB (1099511627775 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(small = 9007199254740990).toBeGreaterThanByteSize(big = 9007199254740991) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>8 PiB (9007199254740991 B)</>
Received:   <red>8 PiB (9007199254740990 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(small = 9007199254740990).toBeGreaterThanByteSize(big = 9007199254740991n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>8 PiB (9007199254740991 B)</>
Received:   <red>8 PiB (9007199254740990 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(small = 9007199254740990n).toBeGreaterThanByteSize(big = 9007199254740991) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>8 PiB (9007199254740991 B)</>
Received:   <red>8 PiB (9007199254740990 B)</>"
`;

exports[`.toBeGreaterThanByteSize() fail expect(small = 9007199254740990n).toBeGreaterThanByteSize(big = 9007199254740991n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: > <green>8 PiB (9007199254740991 B)</>
Received:   <red>8 PiB (9007199254740990 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(actual = 0).not.toBeGreaterThanOrEqualByteSize(expected = 0) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>0 B</>
Received:        <red>0 B</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(actual = 0).not.toBeGreaterThanOrEqualByteSize(expected = 0n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>0 B</>
Received:        <red>0 B</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(actual = 0n).not.toBeGreaterThanOrEqualByteSize(expected = 0) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>0 B</>
Received:        <red>0 B</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(actual = 0n).not.toBeGreaterThanOrEqualByteSize(expected = 0n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>0 B</>
Received:        <red>0 B</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(actual = 1).not.toBeGreaterThanOrEqualByteSize(expected = 1) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1 B</>
Received:        <red>1 B</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(actual = 1).not.toBeGreaterThanOrEqualByteSize(expected = 1n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1 B</>
Received:        <red>1 B</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(actual = 1n).not.toBeGreaterThanOrEqualByteSize(expected = 1) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1 B</>
Received:        <red>1 B</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(actual = 1n).not.toBeGreaterThanOrEqualByteSize(expected = 1n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1 B</>
Received:        <red>1 B</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(actual = 1024).not.toBeGreaterThanOrEqualByteSize(expected = 1024) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1 KiB (1024 B)</>
Received:        <red>1 KiB (1024 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(actual = 1024).not.toBeGreaterThanOrEqualByteSize(expected = 1024n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1 KiB (1024 B)</>
Received:        <red>1 KiB (1024 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(actual = 1024n).not.toBeGreaterThanOrEqualByteSize(expected = 1024) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1 KiB (1024 B)</>
Received:        <red>1 KiB (1024 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(actual = 1024n).not.toBeGreaterThanOrEqualByteSize(expected = 1024n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1 KiB (1024 B)</>
Received:        <red>1 KiB (1024 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(actual = 1048576).not.toBeGreaterThanOrEqualByteSize(expected = 1048576) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1 MiB (1048576 B)</>
Received:        <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(actual = 1048576).not.toBeGreaterThanOrEqualByteSize(expected = 1048576n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1 MiB (1048576 B)</>
Received:        <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(actual = 1048576n).not.toBeGreaterThanOrEqualByteSize(expected = 1048576) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1 MiB (1048576 B)</>
Received:        <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(actual = 1048576n).not.toBeGreaterThanOrEqualByteSize(expected = 1048576n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1 MiB (1048576 B)</>
Received:        <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(actual = 1073741824).not.toBeGreaterThanOrEqualByteSize(expected = 1073741824) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1 GiB (1073741824 B)</>
Received:        <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(actual = 1073741824).not.toBeGreaterThanOrEqualByteSize(expected = 1073741824n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1 GiB (1073741824 B)</>
Received:        <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(actual = 1073741824n).not.toBeGreaterThanOrEqualByteSize(expected = 1073741824) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1 GiB (1073741824 B)</>
Received:        <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(actual = 1073741824n).not.toBeGreaterThanOrEqualByteSize(expected = 1073741824n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1 GiB (1073741824 B)</>
Received:        <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(actual = 1099511627776).not.toBeGreaterThanOrEqualByteSize(expected = 1099511627776) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1 TiB (1099511627776 B)</>
Received:        <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(actual = 1099511627776).not.toBeGreaterThanOrEqualByteSize(expected = 1099511627776n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1 TiB (1099511627776 B)</>
Received:        <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(actual = 1099511627776n).not.toBeGreaterThanOrEqualByteSize(expected = 1099511627776) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1 TiB (1099511627776 B)</>
Received:        <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(actual = 1099511627776n).not.toBeGreaterThanOrEqualByteSize(expected = 1099511627776n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1 TiB (1099511627776 B)</>
Received:        <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(actual = 1125899906842624).not.toBeGreaterThanOrEqualByteSize(expected = 1125899906842624) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1 PiB (1125899906842624 B)</>
Received:        <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(actual = 1125899906842624).not.toBeGreaterThanOrEqualByteSize(expected = 1125899906842624n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1 PiB (1125899906842624 B)</>
Received:        <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(actual = 1125899906842624n).not.toBeGreaterThanOrEqualByteSize(expected = 1125899906842624) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1 PiB (1125899906842624 B)</>
Received:        <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(actual = 1125899906842624n).not.toBeGreaterThanOrEqualByteSize(expected = 1125899906842624n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1 PiB (1125899906842624 B)</>
Received:        <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(big = 2).not.toBeGreaterThanOrEqualByteSize(small = 1) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1 B</>
Received:        <red>2 B</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(big = 2).not.toBeGreaterThanOrEqualByteSize(small = 1n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1 B</>
Received:        <red>2 B</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(big = 2n).not.toBeGreaterThanOrEqualByteSize(small = 1) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1 B</>
Received:        <red>2 B</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(big = 2n).not.toBeGreaterThanOrEqualByteSize(small = 1n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1 B</>
Received:        <red>2 B</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(big = 1024).not.toBeGreaterThanOrEqualByteSize(small = 1023) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1023 B</>
Received:        <red>1 KiB (1024 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(big = 1024).not.toBeGreaterThanOrEqualByteSize(small = 1023n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1023 B</>
Received:        <red>1 KiB (1024 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(big = 1024n).not.toBeGreaterThanOrEqualByteSize(small = 1023) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1023 B</>
Received:        <red>1 KiB (1024 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(big = 1024n).not.toBeGreaterThanOrEqualByteSize(small = 1023n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1023 B</>
Received:        <red>1 KiB (1024 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(big = 1048576).not.toBeGreaterThanOrEqualByteSize(small = 1048575) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1024 KiB (1048575 B)</>
Received:        <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(big = 1048576).not.toBeGreaterThanOrEqualByteSize(small = 1048575n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1024 KiB (1048575 B)</>
Received:        <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(big = 1048576n).not.toBeGreaterThanOrEqualByteSize(small = 1048575) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1024 KiB (1048575 B)</>
Received:        <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(big = 1048576n).not.toBeGreaterThanOrEqualByteSize(small = 1048575n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1024 KiB (1048575 B)</>
Received:        <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(big = 1073741824).not.toBeGreaterThanOrEqualByteSize(small = 1073741823) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1024 MiB (1073741823 B)</>
Received:        <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(big = 1073741824).not.toBeGreaterThanOrEqualByteSize(small = 1073741823n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1024 MiB (1073741823 B)</>
Received:        <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(big = 1073741824n).not.toBeGreaterThanOrEqualByteSize(small = 1073741823) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1024 MiB (1073741823 B)</>
Received:        <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(big = 1073741824n).not.toBeGreaterThanOrEqualByteSize(small = 1073741823n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1024 MiB (1073741823 B)</>
Received:        <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(big = 1099511627776).not.toBeGreaterThanOrEqualByteSize(small = 1099511627775) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1024 GiB (1099511627775 B)</>
Received:        <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(big = 1099511627776).not.toBeGreaterThanOrEqualByteSize(small = 1099511627775n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1024 GiB (1099511627775 B)</>
Received:        <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(big = 1099511627776n).not.toBeGreaterThanOrEqualByteSize(small = 1099511627775) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1024 GiB (1099511627775 B)</>
Received:        <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(big = 1099511627776n).not.toBeGreaterThanOrEqualByteSize(small = 1099511627775n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>1024 GiB (1099511627775 B)</>
Received:        <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(big = 9007199254740991).not.toBeGreaterThanOrEqualByteSize(small = 9007199254740990) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>8 PiB (9007199254740990 B)</>
Received:        <red>8 PiB (9007199254740991 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(big = 9007199254740991).not.toBeGreaterThanOrEqualByteSize(small = 9007199254740990n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>8 PiB (9007199254740990 B)</>
Received:        <red>8 PiB (9007199254740991 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(big = 9007199254740991n).not.toBeGreaterThanOrEqualByteSize(small = 9007199254740990) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>8 PiB (9007199254740990 B)</>
Received:        <red>8 PiB (9007199254740991 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(big = 9007199254740991n).not.toBeGreaterThanOrEqualByteSize(small = 9007199254740990n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not >= <green>8 PiB (9007199254740990 B)</>
Received:        <red>8 PiB (9007199254740991 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(small = 1).toBeGreaterThanOrEqualByteSize(big = 2) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: >= <green>2 B</>
Received:    <red>1 B</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(small = 1).toBeGreaterThanOrEqualByteSize(big = 2n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: >= <green>2 B</>
Received:    <red>1 B</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(small = 1n).toBeGreaterThanOrEqualByteSize(big = 2) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: >= <green>2 B</>
Received:    <red>1 B</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(small = 1n).toBeGreaterThanOrEqualByteSize(big = 2n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: >= <green>2 B</>
Received:    <red>1 B</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(small = 1023).toBeGreaterThanOrEqualByteSize(big = 1024) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: >= <green>1 KiB (1024 B)</>
Received:    <red>1023 B</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(small = 1023).toBeGreaterThanOrEqualByteSize(big = 1024n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: >= <green>1 KiB (1024 B)</>
Received:    <red>1023 B</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(small = 1023n).toBeGreaterThanOrEqualByteSize(big = 1024) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: >= <green>1 KiB (1024 B)</>
Received:    <red>1023 B</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(small = 1023n).toBeGreaterThanOrEqualByteSize(big = 1024n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: >= <green>1 KiB (1024 B)</>
Received:    <red>1023 B</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(small = 1048575).toBeGreaterThanOrEqualByteSize(big = 1048576) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: >= <green>1 MiB (1048576 B)</>
Received:    <red>1024 KiB (1048575 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(small = 1048575).toBeGreaterThanOrEqualByteSize(big = 1048576n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: >= <green>1 MiB (1048576 B)</>
Received:    <red>1024 KiB (1048575 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(small = 1048575n).toBeGreaterThanOrEqualByteSize(big = 1048576) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: >= <green>1 MiB (1048576 B)</>
Received:    <red>1024 KiB (1048575 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(small = 1048575n).toBeGreaterThanOrEqualByteSize(big = 1048576n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: >= <green>1 MiB (1048576 B)</>
Received:    <red>1024 KiB (1048575 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(small = 1073741823).toBeGreaterThanOrEqualByteSize(big = 1073741824) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: >= <green>1 GiB (1073741824 B)</>
Received:    <red>1024 MiB (1073741823 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(small = 1073741823).toBeGreaterThanOrEqualByteSize(big = 1073741824n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: >= <green>1 GiB (1073741824 B)</>
Received:    <red>1024 MiB (1073741823 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(small = 1073741823n).toBeGreaterThanOrEqualByteSize(big = 1073741824) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: >= <green>1 GiB (1073741824 B)</>
Received:    <red>1024 MiB (1073741823 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(small = 1073741823n).toBeGreaterThanOrEqualByteSize(big = 1073741824n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: >= <green>1 GiB (1073741824 B)</>
Received:    <red>1024 MiB (1073741823 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(small = 1099511627775).toBeGreaterThanOrEqualByteSize(big = 1099511627776) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: >= <green>1 TiB (1099511627776 B)</>
Received:    <red>1024 GiB (1099511627775 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(small = 1099511627775).toBeGreaterThanOrEqualByteSize(big = 1099511627776n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: >= <green>1 TiB (1099511627776 B)</>
Received:    <red>1024 GiB (1099511627775 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(small = 1099511627775n).toBeGreaterThanOrEqualByteSize(big = 1099511627776) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: >= <green>1 TiB (1099511627776 B)</>
Received:    <red>1024 GiB (1099511627775 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(small = 1099511627775n).toBeGreaterThanOrEqualByteSize(big = 1099511627776n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: >= <green>1 TiB (1099511627776 B)</>
Received:    <red>1024 GiB (1099511627775 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(small = 9007199254740990).toBeGreaterThanOrEqualByteSize(big = 9007199254740991) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: >= <green>8 PiB (9007199254740991 B)</>
Received:    <red>8 PiB (9007199254740990 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(small = 9007199254740990).toBeGreaterThanOrEqualByteSize(big = 9007199254740991n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: >= <green>8 PiB (9007199254740991 B)</>
Received:    <red>8 PiB (9007199254740990 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(small = 9007199254740990n).toBeGreaterThanOrEqualByteSize(big = 9007199254740991) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: >= <green>8 PiB (9007199254740991 B)</>
Received:    <red>8 PiB (9007199254740990 B)</>"
`;

exports[`.toBeGreaterThanOrEqualByteSize() fail expect(small = 9007199254740990n).toBeGreaterThanOrEqualByteSize(big = 9007199254740991n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeGreaterThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: >= <green>8 PiB (9007199254740991 B)</>
Received:    <red>8 PiB (9007199254740990 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(actual = 0).toBeLessThanByteSize(expected = 0) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>0 B</>
Received:   <red>0 B</>"
`;

exports[`.toBeLessThanByteSize() fail expect(actual = 0).toBeLessThanByteSize(expected = 0n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>0 B</>
Received:   <red>0 B</>"
`;

exports[`.toBeLessThanByteSize() fail expect(actual = 0n).toBeLessThanByteSize(expected = 0) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>0 B</>
Received:   <red>0 B</>"
`;

exports[`.toBeLessThanByteSize() fail expect(actual = 0n).toBeLessThanByteSize(expected = 0n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>0 B</>
Received:   <red>0 B</>"
`;

exports[`.toBeLessThanByteSize() fail expect(actual = 1).toBeLessThanByteSize(expected = 1) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1 B</>
Received:   <red>1 B</>"
`;

exports[`.toBeLessThanByteSize() fail expect(actual = 1).toBeLessThanByteSize(expected = 1n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1 B</>
Received:   <red>1 B</>"
`;

exports[`.toBeLessThanByteSize() fail expect(actual = 1n).toBeLessThanByteSize(expected = 1) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1 B</>
Received:   <red>1 B</>"
`;

exports[`.toBeLessThanByteSize() fail expect(actual = 1n).toBeLessThanByteSize(expected = 1n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1 B</>
Received:   <red>1 B</>"
`;

exports[`.toBeLessThanByteSize() fail expect(actual = 1024).toBeLessThanByteSize(expected = 1024) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1 KiB (1024 B)</>
Received:   <red>1 KiB (1024 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(actual = 1024).toBeLessThanByteSize(expected = 1024n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1 KiB (1024 B)</>
Received:   <red>1 KiB (1024 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(actual = 1024n).toBeLessThanByteSize(expected = 1024) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1 KiB (1024 B)</>
Received:   <red>1 KiB (1024 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(actual = 1024n).toBeLessThanByteSize(expected = 1024n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1 KiB (1024 B)</>
Received:   <red>1 KiB (1024 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(actual = 1048576).toBeLessThanByteSize(expected = 1048576) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1 MiB (1048576 B)</>
Received:   <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(actual = 1048576).toBeLessThanByteSize(expected = 1048576n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1 MiB (1048576 B)</>
Received:   <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(actual = 1048576n).toBeLessThanByteSize(expected = 1048576) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1 MiB (1048576 B)</>
Received:   <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(actual = 1048576n).toBeLessThanByteSize(expected = 1048576n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1 MiB (1048576 B)</>
Received:   <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(actual = 1073741824).toBeLessThanByteSize(expected = 1073741824) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1 GiB (1073741824 B)</>
Received:   <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(actual = 1073741824).toBeLessThanByteSize(expected = 1073741824n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1 GiB (1073741824 B)</>
Received:   <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(actual = 1073741824n).toBeLessThanByteSize(expected = 1073741824) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1 GiB (1073741824 B)</>
Received:   <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(actual = 1073741824n).toBeLessThanByteSize(expected = 1073741824n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1 GiB (1073741824 B)</>
Received:   <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(actual = 1099511627776).toBeLessThanByteSize(expected = 1099511627776) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1 TiB (1099511627776 B)</>
Received:   <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(actual = 1099511627776).toBeLessThanByteSize(expected = 1099511627776n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1 TiB (1099511627776 B)</>
Received:   <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(actual = 1099511627776n).toBeLessThanByteSize(expected = 1099511627776) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1 TiB (1099511627776 B)</>
Received:   <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(actual = 1099511627776n).toBeLessThanByteSize(expected = 1099511627776n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1 TiB (1099511627776 B)</>
Received:   <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(actual = 1125899906842624).toBeLessThanByteSize(expected = 1125899906842624) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1 PiB (1125899906842624 B)</>
Received:   <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(actual = 1125899906842624).toBeLessThanByteSize(expected = 1125899906842624n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1 PiB (1125899906842624 B)</>
Received:   <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(actual = 1125899906842624n).toBeLessThanByteSize(expected = 1125899906842624) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1 PiB (1125899906842624 B)</>
Received:   <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(actual = 1125899906842624n).toBeLessThanByteSize(expected = 1125899906842624n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1 PiB (1125899906842624 B)</>
Received:   <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(big = 2).toBeLessThanByteSize(small = 1) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1 B</>
Received:   <red>2 B</>"
`;

exports[`.toBeLessThanByteSize() fail expect(big = 2).toBeLessThanByteSize(small = 1n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1 B</>
Received:   <red>2 B</>"
`;

exports[`.toBeLessThanByteSize() fail expect(big = 2n).toBeLessThanByteSize(small = 1) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1 B</>
Received:   <red>2 B</>"
`;

exports[`.toBeLessThanByteSize() fail expect(big = 2n).toBeLessThanByteSize(small = 1n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1 B</>
Received:   <red>2 B</>"
`;

exports[`.toBeLessThanByteSize() fail expect(big = 1024).toBeLessThanByteSize(small = 1023) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1023 B</>
Received:   <red>1 KiB (1024 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(big = 1024).toBeLessThanByteSize(small = 1023n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1023 B</>
Received:   <red>1 KiB (1024 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(big = 1024n).toBeLessThanByteSize(small = 1023) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1023 B</>
Received:   <red>1 KiB (1024 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(big = 1024n).toBeLessThanByteSize(small = 1023n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1023 B</>
Received:   <red>1 KiB (1024 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(big = 1048576).toBeLessThanByteSize(small = 1048575) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1024 KiB (1048575 B)</>
Received:   <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(big = 1048576).toBeLessThanByteSize(small = 1048575n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1024 KiB (1048575 B)</>
Received:   <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(big = 1048576n).toBeLessThanByteSize(small = 1048575) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1024 KiB (1048575 B)</>
Received:   <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(big = 1048576n).toBeLessThanByteSize(small = 1048575n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1024 KiB (1048575 B)</>
Received:   <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(big = 1073741824).toBeLessThanByteSize(small = 1073741823) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1024 MiB (1073741823 B)</>
Received:   <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(big = 1073741824).toBeLessThanByteSize(small = 1073741823n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1024 MiB (1073741823 B)</>
Received:   <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(big = 1073741824n).toBeLessThanByteSize(small = 1073741823) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1024 MiB (1073741823 B)</>
Received:   <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(big = 1073741824n).toBeLessThanByteSize(small = 1073741823n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1024 MiB (1073741823 B)</>
Received:   <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(big = 1099511627776).toBeLessThanByteSize(small = 1099511627775) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1024 GiB (1099511627775 B)</>
Received:   <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(big = 1099511627776).toBeLessThanByteSize(small = 1099511627775n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1024 GiB (1099511627775 B)</>
Received:   <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(big = 1099511627776n).toBeLessThanByteSize(small = 1099511627775) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1024 GiB (1099511627775 B)</>
Received:   <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(big = 1099511627776n).toBeLessThanByteSize(small = 1099511627775n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>1024 GiB (1099511627775 B)</>
Received:   <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(big = 9007199254740991).toBeLessThanByteSize(small = 9007199254740990) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>8 PiB (9007199254740990 B)</>
Received:   <red>8 PiB (9007199254740991 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(big = 9007199254740991).toBeLessThanByteSize(small = 9007199254740990n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>8 PiB (9007199254740990 B)</>
Received:   <red>8 PiB (9007199254740991 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(big = 9007199254740991n).toBeLessThanByteSize(small = 9007199254740990) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>8 PiB (9007199254740990 B)</>
Received:   <red>8 PiB (9007199254740991 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(big = 9007199254740991n).toBeLessThanByteSize(small = 9007199254740990n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: < <green>8 PiB (9007199254740990 B)</>
Received:   <red>8 PiB (9007199254740991 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(small = 1).not.toBeLessThanByteSize(big = 2) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not < <green>2 B</>
Received:       <red>1 B</>"
`;

exports[`.toBeLessThanByteSize() fail expect(small = 1).not.toBeLessThanByteSize(big = 2n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not < <green>2 B</>
Received:       <red>1 B</>"
`;

exports[`.toBeLessThanByteSize() fail expect(small = 1n).not.toBeLessThanByteSize(big = 2) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not < <green>2 B</>
Received:       <red>1 B</>"
`;

exports[`.toBeLessThanByteSize() fail expect(small = 1n).not.toBeLessThanByteSize(big = 2n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not < <green>2 B</>
Received:       <red>1 B</>"
`;

exports[`.toBeLessThanByteSize() fail expect(small = 1023).not.toBeLessThanByteSize(big = 1024) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not < <green>1 KiB (1024 B)</>
Received:       <red>1023 B</>"
`;

exports[`.toBeLessThanByteSize() fail expect(small = 1023).not.toBeLessThanByteSize(big = 1024n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not < <green>1 KiB (1024 B)</>
Received:       <red>1023 B</>"
`;

exports[`.toBeLessThanByteSize() fail expect(small = 1023n).not.toBeLessThanByteSize(big = 1024) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not < <green>1 KiB (1024 B)</>
Received:       <red>1023 B</>"
`;

exports[`.toBeLessThanByteSize() fail expect(small = 1023n).not.toBeLessThanByteSize(big = 1024n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not < <green>1 KiB (1024 B)</>
Received:       <red>1023 B</>"
`;

exports[`.toBeLessThanByteSize() fail expect(small = 1048575).not.toBeLessThanByteSize(big = 1048576) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not < <green>1 MiB (1048576 B)</>
Received:       <red>1024 KiB (1048575 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(small = 1048575).not.toBeLessThanByteSize(big = 1048576n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not < <green>1 MiB (1048576 B)</>
Received:       <red>1024 KiB (1048575 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(small = 1048575n).not.toBeLessThanByteSize(big = 1048576) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not < <green>1 MiB (1048576 B)</>
Received:       <red>1024 KiB (1048575 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(small = 1048575n).not.toBeLessThanByteSize(big = 1048576n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not < <green>1 MiB (1048576 B)</>
Received:       <red>1024 KiB (1048575 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(small = 1073741823).not.toBeLessThanByteSize(big = 1073741824) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not < <green>1 GiB (1073741824 B)</>
Received:       <red>1024 MiB (1073741823 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(small = 1073741823).not.toBeLessThanByteSize(big = 1073741824n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not < <green>1 GiB (1073741824 B)</>
Received:       <red>1024 MiB (1073741823 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(small = 1073741823n).not.toBeLessThanByteSize(big = 1073741824) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not < <green>1 GiB (1073741824 B)</>
Received:       <red>1024 MiB (1073741823 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(small = 1073741823n).not.toBeLessThanByteSize(big = 1073741824n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not < <green>1 GiB (1073741824 B)</>
Received:       <red>1024 MiB (1073741823 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(small = 1099511627775).not.toBeLessThanByteSize(big = 1099511627776) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not < <green>1 TiB (1099511627776 B)</>
Received:       <red>1024 GiB (1099511627775 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(small = 1099511627775).not.toBeLessThanByteSize(big = 1099511627776n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not < <green>1 TiB (1099511627776 B)</>
Received:       <red>1024 GiB (1099511627775 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(small = 1099511627775n).not.toBeLessThanByteSize(big = 1099511627776) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not < <green>1 TiB (1099511627776 B)</>
Received:       <red>1024 GiB (1099511627775 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(small = 1099511627775n).not.toBeLessThanByteSize(big = 1099511627776n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not < <green>1 TiB (1099511627776 B)</>
Received:       <red>1024 GiB (1099511627775 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(small = 9007199254740990).not.toBeLessThanByteSize(big = 9007199254740991) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not < <green>8 PiB (9007199254740991 B)</>
Received:       <red>8 PiB (9007199254740990 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(small = 9007199254740990).not.toBeLessThanByteSize(big = 9007199254740991n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not < <green>8 PiB (9007199254740991 B)</>
Received:       <red>8 PiB (9007199254740990 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(small = 9007199254740990n).not.toBeLessThanByteSize(big = 9007199254740991) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not < <green>8 PiB (9007199254740991 B)</>
Received:       <red>8 PiB (9007199254740990 B)</>"
`;

exports[`.toBeLessThanByteSize() fail expect(small = 9007199254740990n).not.toBeLessThanByteSize(big = 9007199254740991n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanByteSize<dim>(</><green>expected</><dim>)</>

Expected: not < <green>8 PiB (9007199254740991 B)</>
Received:       <red>8 PiB (9007199254740990 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(actual = 0).not.toBeLessThanOrEqualByteSize(expected = 0) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>0 B</>
Received:        <red>0 B</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(actual = 0).not.toBeLessThanOrEqualByteSize(expected = 0n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>0 B</>
Received:        <red>0 B</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(actual = 0n).not.toBeLessThanOrEqualByteSize(expected = 0) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>0 B</>
Received:        <red>0 B</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(actual = 0n).not.toBeLessThanOrEqualByteSize(expected = 0n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>0 B</>
Received:        <red>0 B</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(actual = 1).not.toBeLessThanOrEqualByteSize(expected = 1) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 B</>
Received:        <red>1 B</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(actual = 1).not.toBeLessThanOrEqualByteSize(expected = 1n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 B</>
Received:        <red>1 B</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(actual = 1n).not.toBeLessThanOrEqualByteSize(expected = 1) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 B</>
Received:        <red>1 B</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(actual = 1n).not.toBeLessThanOrEqualByteSize(expected = 1n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 B</>
Received:        <red>1 B</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(actual = 1024).not.toBeLessThanOrEqualByteSize(expected = 1024) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 KiB (1024 B)</>
Received:        <red>1 KiB (1024 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(actual = 1024).not.toBeLessThanOrEqualByteSize(expected = 1024n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 KiB (1024 B)</>
Received:        <red>1 KiB (1024 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(actual = 1024n).not.toBeLessThanOrEqualByteSize(expected = 1024) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 KiB (1024 B)</>
Received:        <red>1 KiB (1024 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(actual = 1024n).not.toBeLessThanOrEqualByteSize(expected = 1024n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 KiB (1024 B)</>
Received:        <red>1 KiB (1024 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(actual = 1048576).not.toBeLessThanOrEqualByteSize(expected = 1048576) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 MiB (1048576 B)</>
Received:        <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(actual = 1048576).not.toBeLessThanOrEqualByteSize(expected = 1048576n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 MiB (1048576 B)</>
Received:        <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(actual = 1048576n).not.toBeLessThanOrEqualByteSize(expected = 1048576) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 MiB (1048576 B)</>
Received:        <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(actual = 1048576n).not.toBeLessThanOrEqualByteSize(expected = 1048576n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 MiB (1048576 B)</>
Received:        <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(actual = 1073741824).not.toBeLessThanOrEqualByteSize(expected = 1073741824) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 GiB (1073741824 B)</>
Received:        <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(actual = 1073741824).not.toBeLessThanOrEqualByteSize(expected = 1073741824n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 GiB (1073741824 B)</>
Received:        <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(actual = 1073741824n).not.toBeLessThanOrEqualByteSize(expected = 1073741824) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 GiB (1073741824 B)</>
Received:        <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(actual = 1073741824n).not.toBeLessThanOrEqualByteSize(expected = 1073741824n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 GiB (1073741824 B)</>
Received:        <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(actual = 1099511627776).not.toBeLessThanOrEqualByteSize(expected = 1099511627776) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 TiB (1099511627776 B)</>
Received:        <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(actual = 1099511627776).not.toBeLessThanOrEqualByteSize(expected = 1099511627776n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 TiB (1099511627776 B)</>
Received:        <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(actual = 1099511627776n).not.toBeLessThanOrEqualByteSize(expected = 1099511627776) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 TiB (1099511627776 B)</>
Received:        <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(actual = 1099511627776n).not.toBeLessThanOrEqualByteSize(expected = 1099511627776n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 TiB (1099511627776 B)</>
Received:        <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(actual = 1125899906842624).not.toBeLessThanOrEqualByteSize(expected = 1125899906842624) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 PiB (1125899906842624 B)</>
Received:        <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(actual = 1125899906842624).not.toBeLessThanOrEqualByteSize(expected = 1125899906842624n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 PiB (1125899906842624 B)</>
Received:        <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(actual = 1125899906842624n).not.toBeLessThanOrEqualByteSize(expected = 1125899906842624) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 PiB (1125899906842624 B)</>
Received:        <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(actual = 1125899906842624n).not.toBeLessThanOrEqualByteSize(expected = 1125899906842624n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 PiB (1125899906842624 B)</>
Received:        <red>1 PiB (1125899906842624 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(big = 2).toBeLessThanOrEqualByteSize(small = 1) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: <= <green>1 B</>
Received:    <red>2 B</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(big = 2).toBeLessThanOrEqualByteSize(small = 1n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: <= <green>1 B</>
Received:    <red>2 B</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(big = 2n).toBeLessThanOrEqualByteSize(small = 1) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: <= <green>1 B</>
Received:    <red>2 B</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(big = 2n).toBeLessThanOrEqualByteSize(small = 1n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: <= <green>1 B</>
Received:    <red>2 B</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(big = 1024).toBeLessThanOrEqualByteSize(small = 1023) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: <= <green>1023 B</>
Received:    <red>1 KiB (1024 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(big = 1024).toBeLessThanOrEqualByteSize(small = 1023n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: <= <green>1023 B</>
Received:    <red>1 KiB (1024 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(big = 1024n).toBeLessThanOrEqualByteSize(small = 1023) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: <= <green>1023 B</>
Received:    <red>1 KiB (1024 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(big = 1024n).toBeLessThanOrEqualByteSize(small = 1023n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: <= <green>1023 B</>
Received:    <red>1 KiB (1024 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(big = 1048576).toBeLessThanOrEqualByteSize(small = 1048575) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: <= <green>1024 KiB (1048575 B)</>
Received:    <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(big = 1048576).toBeLessThanOrEqualByteSize(small = 1048575n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: <= <green>1024 KiB (1048575 B)</>
Received:    <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(big = 1048576n).toBeLessThanOrEqualByteSize(small = 1048575) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: <= <green>1024 KiB (1048575 B)</>
Received:    <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(big = 1048576n).toBeLessThanOrEqualByteSize(small = 1048575n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: <= <green>1024 KiB (1048575 B)</>
Received:    <red>1 MiB (1048576 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(big = 1073741824).toBeLessThanOrEqualByteSize(small = 1073741823) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: <= <green>1024 MiB (1073741823 B)</>
Received:    <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(big = 1073741824).toBeLessThanOrEqualByteSize(small = 1073741823n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: <= <green>1024 MiB (1073741823 B)</>
Received:    <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(big = 1073741824n).toBeLessThanOrEqualByteSize(small = 1073741823) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: <= <green>1024 MiB (1073741823 B)</>
Received:    <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(big = 1073741824n).toBeLessThanOrEqualByteSize(small = 1073741823n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: <= <green>1024 MiB (1073741823 B)</>
Received:    <red>1 GiB (1073741824 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(big = 1099511627776).toBeLessThanOrEqualByteSize(small = 1099511627775) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: <= <green>1024 GiB (1099511627775 B)</>
Received:    <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(big = 1099511627776).toBeLessThanOrEqualByteSize(small = 1099511627775n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: <= <green>1024 GiB (1099511627775 B)</>
Received:    <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(big = 1099511627776n).toBeLessThanOrEqualByteSize(small = 1099511627775) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: <= <green>1024 GiB (1099511627775 B)</>
Received:    <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(big = 1099511627776n).toBeLessThanOrEqualByteSize(small = 1099511627775n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: <= <green>1024 GiB (1099511627775 B)</>
Received:    <red>1 TiB (1099511627776 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(big = 9007199254740991).toBeLessThanOrEqualByteSize(small = 9007199254740990) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: <= <green>8 PiB (9007199254740990 B)</>
Received:    <red>8 PiB (9007199254740991 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(big = 9007199254740991).toBeLessThanOrEqualByteSize(small = 9007199254740990n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: <= <green>8 PiB (9007199254740990 B)</>
Received:    <red>8 PiB (9007199254740991 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(big = 9007199254740991n).toBeLessThanOrEqualByteSize(small = 9007199254740990) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: <= <green>8 PiB (9007199254740990 B)</>
Received:    <red>8 PiB (9007199254740991 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(big = 9007199254740991n).toBeLessThanOrEqualByteSize(small = 9007199254740990n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: <= <green>8 PiB (9007199254740990 B)</>
Received:    <red>8 PiB (9007199254740991 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(small = 1).not.toBeLessThanOrEqualByteSize(big = 2) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>2 B</>
Received:        <red>1 B</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(small = 1).not.toBeLessThanOrEqualByteSize(big = 2n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>2 B</>
Received:        <red>1 B</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(small = 1n).not.toBeLessThanOrEqualByteSize(big = 2) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>2 B</>
Received:        <red>1 B</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(small = 1n).not.toBeLessThanOrEqualByteSize(big = 2n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>2 B</>
Received:        <red>1 B</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(small = 1023).not.toBeLessThanOrEqualByteSize(big = 1024) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 KiB (1024 B)</>
Received:        <red>1023 B</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(small = 1023).not.toBeLessThanOrEqualByteSize(big = 1024n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 KiB (1024 B)</>
Received:        <red>1023 B</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(small = 1023n).not.toBeLessThanOrEqualByteSize(big = 1024) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 KiB (1024 B)</>
Received:        <red>1023 B</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(small = 1023n).not.toBeLessThanOrEqualByteSize(big = 1024n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 KiB (1024 B)</>
Received:        <red>1023 B</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(small = 1048575).not.toBeLessThanOrEqualByteSize(big = 1048576) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 MiB (1048576 B)</>
Received:        <red>1024 KiB (1048575 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(small = 1048575).not.toBeLessThanOrEqualByteSize(big = 1048576n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 MiB (1048576 B)</>
Received:        <red>1024 KiB (1048575 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(small = 1048575n).not.toBeLessThanOrEqualByteSize(big = 1048576) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 MiB (1048576 B)</>
Received:        <red>1024 KiB (1048575 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(small = 1048575n).not.toBeLessThanOrEqualByteSize(big = 1048576n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 MiB (1048576 B)</>
Received:        <red>1024 KiB (1048575 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(small = 1073741823).not.toBeLessThanOrEqualByteSize(big = 1073741824) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 GiB (1073741824 B)</>
Received:        <red>1024 MiB (1073741823 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(small = 1073741823).not.toBeLessThanOrEqualByteSize(big = 1073741824n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 GiB (1073741824 B)</>
Received:        <red>1024 MiB (1073741823 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(small = 1073741823n).not.toBeLessThanOrEqualByteSize(big = 1073741824) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 GiB (1073741824 B)</>
Received:        <red>1024 MiB (1073741823 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(small = 1073741823n).not.toBeLessThanOrEqualByteSize(big = 1073741824n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 GiB (1073741824 B)</>
Received:        <red>1024 MiB (1073741823 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(small = 1099511627775).not.toBeLessThanOrEqualByteSize(big = 1099511627776) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 TiB (1099511627776 B)</>
Received:        <red>1024 GiB (1099511627775 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(small = 1099511627775).not.toBeLessThanOrEqualByteSize(big = 1099511627776n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 TiB (1099511627776 B)</>
Received:        <red>1024 GiB (1099511627775 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(small = 1099511627775n).not.toBeLessThanOrEqualByteSize(big = 1099511627776) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 TiB (1099511627776 B)</>
Received:        <red>1024 GiB (1099511627775 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(small = 1099511627775n).not.toBeLessThanOrEqualByteSize(big = 1099511627776n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>1 TiB (1099511627776 B)</>
Received:        <red>1024 GiB (1099511627775 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(small = 9007199254740990).not.toBeLessThanOrEqualByteSize(big = 9007199254740991) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>8 PiB (9007199254740991 B)</>
Received:        <red>8 PiB (9007199254740990 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(small = 9007199254740990).not.toBeLessThanOrEqualByteSize(big = 9007199254740991n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>8 PiB (9007199254740991 B)</>
Received:        <red>8 PiB (9007199254740990 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(small = 9007199254740990n).not.toBeLessThanOrEqualByteSize(big = 9007199254740991) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>8 PiB (9007199254740991 B)</>
Received:        <red>8 PiB (9007199254740990 B)</>"
`;

exports[`.toBeLessThanOrEqualByteSize() fail expect(small = 9007199254740990n).not.toBeLessThanOrEqualByteSize(big = 9007199254740991n) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBeLessThanOrEqualByteSize<dim>(</><green>expected</><dim>)</>

Expected: not <= <green>8 PiB (9007199254740991 B)</>
Received:        <red>8 PiB (9007199254740990 B)</>"
`;

exports[`.toBytesEqual() fail expect(actual = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>).not.toBytesEqual(expected = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"data\\": [63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0], \\"type\\": \\"Buffer\\"}</>"
`;

exports[`.toBytesEqual() fail expect(actual = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>).not.toBytesEqual(expected = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[]</>
Received:     <red>{\\"data\\": [63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0], \\"type\\": \\"Buffer\\"}</>"
`;

exports[`.toBytesEqual() fail expect(actual = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>).not.toBytesEqual(expected = BigInt64Array(2) [ 8868905189948163135n, 0n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>
Received:     <red>{\\"data\\": [63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0], \\"type\\": \\"Buffer\\"}</>"
`;

exports[`.toBytesEqual() fail expect(actual = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>).not.toBytesEqual(expected = BigUint64Array(2) [ 8868905189948163135n, 0n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>
Received:     <red>{\\"data\\": [63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0], \\"type\\": \\"Buffer\\"}</>"
`;

exports[`.toBytesEqual() fail expect(actual = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>).not.toBytesEqual(expected = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[]</>
Received:     <red>{\\"data\\": [63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0], \\"type\\": \\"Buffer\\"}</>"
`;

exports[`.toBytesEqual() fail expect(actual = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>).not.toBytesEqual(expected = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-288825959610245450000, 7.719946995337284e+35, 0, 0]</>
Received:     <red>{\\"data\\": [63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0], \\"type\\": \\"Buffer\\"}</>"
`;

exports[`.toBytesEqual() fail expect(actual = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>).not.toBytesEqual(expected = Float64Array(2) [ 7.688168988724143e+284, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[7.688168988724143e+284, 0]</>
Received:     <red>{\\"data\\": [63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0], \\"type\\": \\"Buffer\\"}</>"
`;

exports[`.toBytesEqual() fail expect(actual = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>).not.toBytesEqual(expected = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>{\\"data\\": [63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0], \\"type\\": \\"Buffer\\"}</>"
`;

exports[`.toBytesEqual() fail expect(actual = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>).not.toBytesEqual(expected = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-31681, -7814, -20921, 31508, 0, 0, 0, 0]</>
Received:     <red>{\\"data\\": [63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0], \\"type\\": \\"Buffer\\"}</>"
`;

exports[`.toBytesEqual() fail expect(actual = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>).not.toBytesEqual(expected = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-512064449, 2064952903, 0, 0]</>
Received:     <red>{\\"data\\": [63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0], \\"type\\": \\"Buffer\\"}</>"
`;

exports[`.toBytesEqual() fail expect(actual = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>).not.toBytesEqual(expected = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>{\\"data\\": [63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0], \\"type\\": \\"Buffer\\"}</>"
`;

exports[`.toBytesEqual() fail expect(actual = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>).not.toBytesEqual(expected = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>{\\"data\\": [63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0], \\"type\\": \\"Buffer\\"}</>"
`;

exports[`.toBytesEqual() fail expect(actual = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>).not.toBytesEqual(expected = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[33855, 57722, 44615, 31508, 0, 0, 0, 0]</>
Received:     <red>{\\"data\\": [63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0], \\"type\\": \\"Buffer\\"}</>"
`;

exports[`.toBytesEqual() fail expect(actual = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>).not.toBytesEqual(expected = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[3782902847, 2064952903, 0, 0]</>
Received:     <red>{\\"data\\": [63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0], \\"type\\": \\"Buffer\\"}</>"
`;

exports[`.toBytesEqual() fail expect(actual = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>).toBytesEqual(expected = <Buffer 00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>).toBytesEqual(expected = ArrayBuffer { [Uint8Contents]: <00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>, byteLength: 16 }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>).toBytesEqual(expected = BigInt64Array(2) [ 1490207560455962368n, 123n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>).toBytesEqual(expected = BigUint64Array(2) [ 1490207560455962368n, 123n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>).toBytesEqual(expected = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>, byteLength: 16 } }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>).toBytesEqual(expected = Float32Array(4) [ 3.848688634340923e+35, 1.759786131060771e-26, 1.723597111119525e-43, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>).toBytesEqual(expected = Float64Array(2) [ 4.6053234898221557e-209, 6.1e-322 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>).toBytesEqual(expected = Int8Array(16) [ 0, 63, -108, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>).toBytesEqual(expected = Int16Array(8) [ 16128, 31380, 18401, 5294, 123, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>).toBytesEqual(expected = Int32Array(4) [ 2056535808, 346965985, 123, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>).toBytesEqual(expected = Uint8Array(16) [ 0, 63, 148, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>).toBytesEqual(expected = Uint8ClampedArray(16) [ 0, 63, 148, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>).toBytesEqual(expected = Uint16Array(8) [ 16128, 31380, 18401, 5294, 123, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>).toBytesEqual(expected = Uint32Array(4) [ 2056535808, 346965985, 123, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }).not.toBytesEqual(expected = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"data\\": [63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0], \\"type\\": \\"Buffer\\"}</>
Received:     <red>[]</>"
`;

exports[`.toBytesEqual() fail expect(actual = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }).not.toBytesEqual(expected = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[]</>"
`;

exports[`.toBytesEqual() fail expect(actual = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }).not.toBytesEqual(expected = BigInt64Array(2) [ 8868905189948163135n, 0n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>
Received:     <red>[]</>"
`;

exports[`.toBytesEqual() fail expect(actual = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }).not.toBytesEqual(expected = BigUint64Array(2) [ 8868905189948163135n, 0n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>
Received:     <red>[]</>"
`;

exports[`.toBytesEqual() fail expect(actual = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }).not.toBytesEqual(expected = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[]</>
Received:     <red>[]</>"
`;

exports[`.toBytesEqual() fail expect(actual = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }).not.toBytesEqual(expected = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-288825959610245450000, 7.719946995337284e+35, 0, 0]</>
Received:     <red>[]</>"
`;

exports[`.toBytesEqual() fail expect(actual = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }).not.toBytesEqual(expected = Float64Array(2) [ 7.688168988724143e+284, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[7.688168988724143e+284, 0]</>
Received:     <red>[]</>"
`;

exports[`.toBytesEqual() fail expect(actual = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }).not.toBytesEqual(expected = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>[]</>"
`;

exports[`.toBytesEqual() fail expect(actual = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }).not.toBytesEqual(expected = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-31681, -7814, -20921, 31508, 0, 0, 0, 0]</>
Received:     <red>[]</>"
`;

exports[`.toBytesEqual() fail expect(actual = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }).not.toBytesEqual(expected = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-512064449, 2064952903, 0, 0]</>
Received:     <red>[]</>"
`;

exports[`.toBytesEqual() fail expect(actual = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }).not.toBytesEqual(expected = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>[]</>"
`;

exports[`.toBytesEqual() fail expect(actual = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }).not.toBytesEqual(expected = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>[]</>"
`;

exports[`.toBytesEqual() fail expect(actual = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }).not.toBytesEqual(expected = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[33855, 57722, 44615, 31508, 0, 0, 0, 0]</>
Received:     <red>[]</>"
`;

exports[`.toBytesEqual() fail expect(actual = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }).not.toBytesEqual(expected = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[3782902847, 2064952903, 0, 0]</>
Received:     <red>[]</>"
`;

exports[`.toBytesEqual() fail expect(actual = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }).toBytesEqual(expected = <Buffer 00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }).toBytesEqual(expected = ArrayBuffer { [Uint8Contents]: <00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>, byteLength: 16 }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }).toBytesEqual(expected = BigInt64Array(2) [ 1490207560455962368n, 123n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }).toBytesEqual(expected = BigUint64Array(2) [ 1490207560455962368n, 123n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }).toBytesEqual(expected = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>, byteLength: 16 } }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }).toBytesEqual(expected = Float32Array(4) [ 3.848688634340923e+35, 1.759786131060771e-26, 1.723597111119525e-43, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }).toBytesEqual(expected = Float64Array(2) [ 4.6053234898221557e-209, 6.1e-322 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }).toBytesEqual(expected = Int8Array(16) [ 0, 63, -108, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }).toBytesEqual(expected = Int16Array(8) [ 16128, 31380, 18401, 5294, 123, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }).toBytesEqual(expected = Int32Array(4) [ 2056535808, 346965985, 123, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }).toBytesEqual(expected = Uint8Array(16) [ 0, 63, 148, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }).toBytesEqual(expected = Uint8ClampedArray(16) [ 0, 63, 148, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }).toBytesEqual(expected = Uint16Array(8) [ 16128, 31380, 18401, 5294, 123, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }).toBytesEqual(expected = Uint32Array(4) [ 2056535808, 346965985, 123, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigInt64Array(2) [ 8868905189948163135n, 0n ]).not.toBytesEqual(expected = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"data\\": [63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0], \\"type\\": \\"Buffer\\"}</>
Received:     <red>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigInt64Array(2) [ 8868905189948163135n, 0n ]).not.toBytesEqual(expected = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[]</>
Received:     <red>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigInt64Array(2) [ 8868905189948163135n, 0n ]).not.toBytesEqual(expected = BigInt64Array(2) [ 8868905189948163135n, 0n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigInt64Array(2) [ 8868905189948163135n, 0n ]).not.toBytesEqual(expected = BigUint64Array(2) [ 8868905189948163135n, 0n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>
Received:     <red>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigInt64Array(2) [ 8868905189948163135n, 0n ]).not.toBytesEqual(expected = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[]</>
Received:     <red>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigInt64Array(2) [ 8868905189948163135n, 0n ]).not.toBytesEqual(expected = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-288825959610245450000, 7.719946995337284e+35, 0, 0]</>
Received:     <red>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigInt64Array(2) [ 8868905189948163135n, 0n ]).not.toBytesEqual(expected = Float64Array(2) [ 7.688168988724143e+284, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[7.688168988724143e+284, 0]</>
Received:     <red>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigInt64Array(2) [ 8868905189948163135n, 0n ]).not.toBytesEqual(expected = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigInt64Array(2) [ 8868905189948163135n, 0n ]).not.toBytesEqual(expected = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-31681, -7814, -20921, 31508, 0, 0, 0, 0]</>
Received:     <red>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigInt64Array(2) [ 8868905189948163135n, 0n ]).not.toBytesEqual(expected = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-512064449, 2064952903, 0, 0]</>
Received:     <red>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigInt64Array(2) [ 8868905189948163135n, 0n ]).not.toBytesEqual(expected = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigInt64Array(2) [ 8868905189948163135n, 0n ]).not.toBytesEqual(expected = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigInt64Array(2) [ 8868905189948163135n, 0n ]).not.toBytesEqual(expected = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[33855, 57722, 44615, 31508, 0, 0, 0, 0]</>
Received:     <red>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigInt64Array(2) [ 8868905189948163135n, 0n ]).not.toBytesEqual(expected = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[3782902847, 2064952903, 0, 0]</>
Received:     <red>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigInt64Array(2) [ 8868905189948163135n, 0n ]).toBytesEqual(expected = <Buffer 00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigInt64Array(2) [ 8868905189948163135n, 0n ]).toBytesEqual(expected = ArrayBuffer { [Uint8Contents]: <00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>, byteLength: 16 }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigInt64Array(2) [ 8868905189948163135n, 0n ]).toBytesEqual(expected = BigInt64Array(2) [ 1490207560455962368n, 123n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigInt64Array(2) [ 8868905189948163135n, 0n ]).toBytesEqual(expected = BigUint64Array(2) [ 1490207560455962368n, 123n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigInt64Array(2) [ 8868905189948163135n, 0n ]).toBytesEqual(expected = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>, byteLength: 16 } }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigInt64Array(2) [ 8868905189948163135n, 0n ]).toBytesEqual(expected = Float32Array(4) [ 3.848688634340923e+35, 1.759786131060771e-26, 1.723597111119525e-43, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigInt64Array(2) [ 8868905189948163135n, 0n ]).toBytesEqual(expected = Float64Array(2) [ 4.6053234898221557e-209, 6.1e-322 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigInt64Array(2) [ 8868905189948163135n, 0n ]).toBytesEqual(expected = Int8Array(16) [ 0, 63, -108, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigInt64Array(2) [ 8868905189948163135n, 0n ]).toBytesEqual(expected = Int16Array(8) [ 16128, 31380, 18401, 5294, 123, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigInt64Array(2) [ 8868905189948163135n, 0n ]).toBytesEqual(expected = Int32Array(4) [ 2056535808, 346965985, 123, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigInt64Array(2) [ 8868905189948163135n, 0n ]).toBytesEqual(expected = Uint8Array(16) [ 0, 63, 148, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigInt64Array(2) [ 8868905189948163135n, 0n ]).toBytesEqual(expected = Uint8ClampedArray(16) [ 0, 63, 148, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigInt64Array(2) [ 8868905189948163135n, 0n ]).toBytesEqual(expected = Uint16Array(8) [ 16128, 31380, 18401, 5294, 123, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigInt64Array(2) [ 8868905189948163135n, 0n ]).toBytesEqual(expected = Uint32Array(4) [ 2056535808, 346965985, 123, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigUint64Array(2) [ 8868905189948163135n, 0n ]).not.toBytesEqual(expected = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"data\\": [63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0], \\"type\\": \\"Buffer\\"}</>
Received:     <red>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigUint64Array(2) [ 8868905189948163135n, 0n ]).not.toBytesEqual(expected = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[]</>
Received:     <red>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigUint64Array(2) [ 8868905189948163135n, 0n ]).not.toBytesEqual(expected = BigInt64Array(2) [ 8868905189948163135n, 0n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>
Received:     <red>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigUint64Array(2) [ 8868905189948163135n, 0n ]).not.toBytesEqual(expected = BigUint64Array(2) [ 8868905189948163135n, 0n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigUint64Array(2) [ 8868905189948163135n, 0n ]).not.toBytesEqual(expected = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[]</>
Received:     <red>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigUint64Array(2) [ 8868905189948163135n, 0n ]).not.toBytesEqual(expected = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-288825959610245450000, 7.719946995337284e+35, 0, 0]</>
Received:     <red>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigUint64Array(2) [ 8868905189948163135n, 0n ]).not.toBytesEqual(expected = Float64Array(2) [ 7.688168988724143e+284, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[7.688168988724143e+284, 0]</>
Received:     <red>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigUint64Array(2) [ 8868905189948163135n, 0n ]).not.toBytesEqual(expected = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigUint64Array(2) [ 8868905189948163135n, 0n ]).not.toBytesEqual(expected = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-31681, -7814, -20921, 31508, 0, 0, 0, 0]</>
Received:     <red>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigUint64Array(2) [ 8868905189948163135n, 0n ]).not.toBytesEqual(expected = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-512064449, 2064952903, 0, 0]</>
Received:     <red>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigUint64Array(2) [ 8868905189948163135n, 0n ]).not.toBytesEqual(expected = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigUint64Array(2) [ 8868905189948163135n, 0n ]).not.toBytesEqual(expected = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigUint64Array(2) [ 8868905189948163135n, 0n ]).not.toBytesEqual(expected = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[33855, 57722, 44615, 31508, 0, 0, 0, 0]</>
Received:     <red>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigUint64Array(2) [ 8868905189948163135n, 0n ]).not.toBytesEqual(expected = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[3782902847, 2064952903, 0, 0]</>
Received:     <red>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigUint64Array(2) [ 8868905189948163135n, 0n ]).toBytesEqual(expected = <Buffer 00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigUint64Array(2) [ 8868905189948163135n, 0n ]).toBytesEqual(expected = ArrayBuffer { [Uint8Contents]: <00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>, byteLength: 16 }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigUint64Array(2) [ 8868905189948163135n, 0n ]).toBytesEqual(expected = BigInt64Array(2) [ 1490207560455962368n, 123n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigUint64Array(2) [ 8868905189948163135n, 0n ]).toBytesEqual(expected = BigUint64Array(2) [ 1490207560455962368n, 123n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigUint64Array(2) [ 8868905189948163135n, 0n ]).toBytesEqual(expected = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>, byteLength: 16 } }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigUint64Array(2) [ 8868905189948163135n, 0n ]).toBytesEqual(expected = Float32Array(4) [ 3.848688634340923e+35, 1.759786131060771e-26, 1.723597111119525e-43, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigUint64Array(2) [ 8868905189948163135n, 0n ]).toBytesEqual(expected = Float64Array(2) [ 4.6053234898221557e-209, 6.1e-322 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigUint64Array(2) [ 8868905189948163135n, 0n ]).toBytesEqual(expected = Int8Array(16) [ 0, 63, -108, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigUint64Array(2) [ 8868905189948163135n, 0n ]).toBytesEqual(expected = Int16Array(8) [ 16128, 31380, 18401, 5294, 123, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigUint64Array(2) [ 8868905189948163135n, 0n ]).toBytesEqual(expected = Int32Array(4) [ 2056535808, 346965985, 123, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigUint64Array(2) [ 8868905189948163135n, 0n ]).toBytesEqual(expected = Uint8Array(16) [ 0, 63, 148, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigUint64Array(2) [ 8868905189948163135n, 0n ]).toBytesEqual(expected = Uint8ClampedArray(16) [ 0, 63, 148, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigUint64Array(2) [ 8868905189948163135n, 0n ]).toBytesEqual(expected = Uint16Array(8) [ 16128, 31380, 18401, 5294, 123, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = BigUint64Array(2) [ 8868905189948163135n, 0n ]).toBytesEqual(expected = Uint32Array(4) [ 2056535808, 346965985, 123, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }).not.toBytesEqual(expected = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"data\\": [63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0], \\"type\\": \\"Buffer\\"}</>
Received:     <red>[]</>"
`;

exports[`.toBytesEqual() fail expect(actual = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }).not.toBytesEqual(expected = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[]</>
Received:     <red>[]</>"
`;

exports[`.toBytesEqual() fail expect(actual = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }).not.toBytesEqual(expected = BigInt64Array(2) [ 8868905189948163135n, 0n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>
Received:     <red>[]</>"
`;

exports[`.toBytesEqual() fail expect(actual = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }).not.toBytesEqual(expected = BigUint64Array(2) [ 8868905189948163135n, 0n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>
Received:     <red>[]</>"
`;

exports[`.toBytesEqual() fail expect(actual = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }).not.toBytesEqual(expected = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[]</>"
`;

exports[`.toBytesEqual() fail expect(actual = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }).not.toBytesEqual(expected = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-288825959610245450000, 7.719946995337284e+35, 0, 0]</>
Received:     <red>[]</>"
`;

exports[`.toBytesEqual() fail expect(actual = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }).not.toBytesEqual(expected = Float64Array(2) [ 7.688168988724143e+284, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[7.688168988724143e+284, 0]</>
Received:     <red>[]</>"
`;

exports[`.toBytesEqual() fail expect(actual = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }).not.toBytesEqual(expected = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>[]</>"
`;

exports[`.toBytesEqual() fail expect(actual = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }).not.toBytesEqual(expected = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-31681, -7814, -20921, 31508, 0, 0, 0, 0]</>
Received:     <red>[]</>"
`;

exports[`.toBytesEqual() fail expect(actual = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }).not.toBytesEqual(expected = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-512064449, 2064952903, 0, 0]</>
Received:     <red>[]</>"
`;

exports[`.toBytesEqual() fail expect(actual = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }).not.toBytesEqual(expected = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>[]</>"
`;

exports[`.toBytesEqual() fail expect(actual = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }).not.toBytesEqual(expected = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>[]</>"
`;

exports[`.toBytesEqual() fail expect(actual = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }).not.toBytesEqual(expected = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[33855, 57722, 44615, 31508, 0, 0, 0, 0]</>
Received:     <red>[]</>"
`;

exports[`.toBytesEqual() fail expect(actual = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }).not.toBytesEqual(expected = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[3782902847, 2064952903, 0, 0]</>
Received:     <red>[]</>"
`;

exports[`.toBytesEqual() fail expect(actual = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }).toBytesEqual(expected = <Buffer 00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }).toBytesEqual(expected = ArrayBuffer { [Uint8Contents]: <00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>, byteLength: 16 }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }).toBytesEqual(expected = BigInt64Array(2) [ 1490207560455962368n, 123n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }).toBytesEqual(expected = BigUint64Array(2) [ 1490207560455962368n, 123n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }).toBytesEqual(expected = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>, byteLength: 16 } }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }).toBytesEqual(expected = Float32Array(4) [ 3.848688634340923e+35, 1.759786131060771e-26, 1.723597111119525e-43, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }).toBytesEqual(expected = Float64Array(2) [ 4.6053234898221557e-209, 6.1e-322 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }).toBytesEqual(expected = Int8Array(16) [ 0, 63, -108, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }).toBytesEqual(expected = Int16Array(8) [ 16128, 31380, 18401, 5294, 123, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }).toBytesEqual(expected = Int32Array(4) [ 2056535808, 346965985, 123, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }).toBytesEqual(expected = Uint8Array(16) [ 0, 63, 148, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }).toBytesEqual(expected = Uint8ClampedArray(16) [ 0, 63, 148, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }).toBytesEqual(expected = Uint16Array(8) [ 16128, 31380, 18401, 5294, 123, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }).toBytesEqual(expected = Uint32Array(4) [ 2056535808, 346965985, 123, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]).not.toBytesEqual(expected = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"data\\": [63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0], \\"type\\": \\"Buffer\\"}</>
Received:     <red>[-288825959610245450000, 7.719946995337284e+35, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]).not.toBytesEqual(expected = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[]</>
Received:     <red>[-288825959610245450000, 7.719946995337284e+35, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]).not.toBytesEqual(expected = BigInt64Array(2) [ 8868905189948163135n, 0n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>
Received:     <red>[-288825959610245450000, 7.719946995337284e+35, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]).not.toBytesEqual(expected = BigUint64Array(2) [ 8868905189948163135n, 0n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>
Received:     <red>[-288825959610245450000, 7.719946995337284e+35, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]).not.toBytesEqual(expected = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[]</>
Received:     <red>[-288825959610245450000, 7.719946995337284e+35, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]).not.toBytesEqual(expected = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-288825959610245450000, 7.719946995337284e+35, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]).not.toBytesEqual(expected = Float64Array(2) [ 7.688168988724143e+284, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[7.688168988724143e+284, 0]</>
Received:     <red>[-288825959610245450000, 7.719946995337284e+35, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]).not.toBytesEqual(expected = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>[-288825959610245450000, 7.719946995337284e+35, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]).not.toBytesEqual(expected = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-31681, -7814, -20921, 31508, 0, 0, 0, 0]</>
Received:     <red>[-288825959610245450000, 7.719946995337284e+35, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]).not.toBytesEqual(expected = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-512064449, 2064952903, 0, 0]</>
Received:     <red>[-288825959610245450000, 7.719946995337284e+35, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]).not.toBytesEqual(expected = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>[-288825959610245450000, 7.719946995337284e+35, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]).not.toBytesEqual(expected = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>[-288825959610245450000, 7.719946995337284e+35, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]).not.toBytesEqual(expected = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[33855, 57722, 44615, 31508, 0, 0, 0, 0]</>
Received:     <red>[-288825959610245450000, 7.719946995337284e+35, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]).not.toBytesEqual(expected = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[3782902847, 2064952903, 0, 0]</>
Received:     <red>[-288825959610245450000, 7.719946995337284e+35, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]).toBytesEqual(expected = <Buffer 00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]).toBytesEqual(expected = ArrayBuffer { [Uint8Contents]: <00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>, byteLength: 16 }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]).toBytesEqual(expected = BigInt64Array(2) [ 1490207560455962368n, 123n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]).toBytesEqual(expected = BigUint64Array(2) [ 1490207560455962368n, 123n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]).toBytesEqual(expected = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>, byteLength: 16 } }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]).toBytesEqual(expected = Float32Array(4) [ 3.848688634340923e+35, 1.759786131060771e-26, 1.723597111119525e-43, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]).toBytesEqual(expected = Float64Array(2) [ 4.6053234898221557e-209, 6.1e-322 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]).toBytesEqual(expected = Int8Array(16) [ 0, 63, -108, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]).toBytesEqual(expected = Int16Array(8) [ 16128, 31380, 18401, 5294, 123, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]).toBytesEqual(expected = Int32Array(4) [ 2056535808, 346965985, 123, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]).toBytesEqual(expected = Uint8Array(16) [ 0, 63, 148, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]).toBytesEqual(expected = Uint8ClampedArray(16) [ 0, 63, 148, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]).toBytesEqual(expected = Uint16Array(8) [ 16128, 31380, 18401, 5294, 123, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]).toBytesEqual(expected = Uint32Array(4) [ 2056535808, 346965985, 123, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float64Array(2) [ 7.688168988724143e+284, 0 ]).not.toBytesEqual(expected = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"data\\": [63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0], \\"type\\": \\"Buffer\\"}</>
Received:     <red>[7.688168988724143e+284, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float64Array(2) [ 7.688168988724143e+284, 0 ]).not.toBytesEqual(expected = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[]</>
Received:     <red>[7.688168988724143e+284, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float64Array(2) [ 7.688168988724143e+284, 0 ]).not.toBytesEqual(expected = BigInt64Array(2) [ 8868905189948163135n, 0n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>
Received:     <red>[7.688168988724143e+284, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float64Array(2) [ 7.688168988724143e+284, 0 ]).not.toBytesEqual(expected = BigUint64Array(2) [ 8868905189948163135n, 0n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>
Received:     <red>[7.688168988724143e+284, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float64Array(2) [ 7.688168988724143e+284, 0 ]).not.toBytesEqual(expected = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[]</>
Received:     <red>[7.688168988724143e+284, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float64Array(2) [ 7.688168988724143e+284, 0 ]).not.toBytesEqual(expected = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-288825959610245450000, 7.719946995337284e+35, 0, 0]</>
Received:     <red>[7.688168988724143e+284, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float64Array(2) [ 7.688168988724143e+284, 0 ]).not.toBytesEqual(expected = Float64Array(2) [ 7.688168988724143e+284, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[7.688168988724143e+284, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float64Array(2) [ 7.688168988724143e+284, 0 ]).not.toBytesEqual(expected = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>[7.688168988724143e+284, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float64Array(2) [ 7.688168988724143e+284, 0 ]).not.toBytesEqual(expected = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-31681, -7814, -20921, 31508, 0, 0, 0, 0]</>
Received:     <red>[7.688168988724143e+284, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float64Array(2) [ 7.688168988724143e+284, 0 ]).not.toBytesEqual(expected = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-512064449, 2064952903, 0, 0]</>
Received:     <red>[7.688168988724143e+284, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float64Array(2) [ 7.688168988724143e+284, 0 ]).not.toBytesEqual(expected = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>[7.688168988724143e+284, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float64Array(2) [ 7.688168988724143e+284, 0 ]).not.toBytesEqual(expected = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>[7.688168988724143e+284, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float64Array(2) [ 7.688168988724143e+284, 0 ]).not.toBytesEqual(expected = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[33855, 57722, 44615, 31508, 0, 0, 0, 0]</>
Received:     <red>[7.688168988724143e+284, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float64Array(2) [ 7.688168988724143e+284, 0 ]).not.toBytesEqual(expected = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[3782902847, 2064952903, 0, 0]</>
Received:     <red>[7.688168988724143e+284, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float64Array(2) [ 7.688168988724143e+284, 0 ]).toBytesEqual(expected = <Buffer 00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float64Array(2) [ 7.688168988724143e+284, 0 ]).toBytesEqual(expected = ArrayBuffer { [Uint8Contents]: <00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>, byteLength: 16 }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float64Array(2) [ 7.688168988724143e+284, 0 ]).toBytesEqual(expected = BigInt64Array(2) [ 1490207560455962368n, 123n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float64Array(2) [ 7.688168988724143e+284, 0 ]).toBytesEqual(expected = BigUint64Array(2) [ 1490207560455962368n, 123n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float64Array(2) [ 7.688168988724143e+284, 0 ]).toBytesEqual(expected = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>, byteLength: 16 } }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float64Array(2) [ 7.688168988724143e+284, 0 ]).toBytesEqual(expected = Float32Array(4) [ 3.848688634340923e+35, 1.759786131060771e-26, 1.723597111119525e-43, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float64Array(2) [ 7.688168988724143e+284, 0 ]).toBytesEqual(expected = Float64Array(2) [ 4.6053234898221557e-209, 6.1e-322 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float64Array(2) [ 7.688168988724143e+284, 0 ]).toBytesEqual(expected = Int8Array(16) [ 0, 63, -108, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float64Array(2) [ 7.688168988724143e+284, 0 ]).toBytesEqual(expected = Int16Array(8) [ 16128, 31380, 18401, 5294, 123, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float64Array(2) [ 7.688168988724143e+284, 0 ]).toBytesEqual(expected = Int32Array(4) [ 2056535808, 346965985, 123, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float64Array(2) [ 7.688168988724143e+284, 0 ]).toBytesEqual(expected = Uint8Array(16) [ 0, 63, 148, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float64Array(2) [ 7.688168988724143e+284, 0 ]).toBytesEqual(expected = Uint8ClampedArray(16) [ 0, 63, 148, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float64Array(2) [ 7.688168988724143e+284, 0 ]).toBytesEqual(expected = Uint16Array(8) [ 16128, 31380, 18401, 5294, 123, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Float64Array(2) [ 7.688168988724143e+284, 0 ]).toBytesEqual(expected = Uint32Array(4) [ 2056535808, 346965985, 123, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"data\\": [63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0], \\"type\\": \\"Buffer\\"}</>
Received:     <red>[63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[]</>
Received:     <red>[63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = BigInt64Array(2) [ 8868905189948163135n, 0n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>
Received:     <red>[63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = BigUint64Array(2) [ 8868905189948163135n, 0n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>
Received:     <red>[63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[]</>
Received:     <red>[63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-288825959610245450000, 7.719946995337284e+35, 0, 0]</>
Received:     <red>[63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Float64Array(2) [ 7.688168988724143e+284, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[7.688168988724143e+284, 0]</>
Received:     <red>[63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-31681, -7814, -20921, 31508, 0, 0, 0, 0]</>
Received:     <red>[63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-512064449, 2064952903, 0, 0]</>
Received:     <red>[63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>[63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>[63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[33855, 57722, 44615, 31508, 0, 0, 0, 0]</>
Received:     <red>[63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[3782902847, 2064952903, 0, 0]</>
Received:     <red>[63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = <Buffer 00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = ArrayBuffer { [Uint8Contents]: <00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>, byteLength: 16 }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = BigInt64Array(2) [ 1490207560455962368n, 123n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = BigUint64Array(2) [ 1490207560455962368n, 123n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>, byteLength: 16 } }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = Float32Array(4) [ 3.848688634340923e+35, 1.759786131060771e-26, 1.723597111119525e-43, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = Float64Array(2) [ 4.6053234898221557e-209, 6.1e-322 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = Int8Array(16) [ 0, 63, -108, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = Int16Array(8) [ 16128, 31380, 18401, 5294, 123, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = Int32Array(4) [ 2056535808, 346965985, 123, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = Uint8Array(16) [ 0, 63, 148, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = Uint8ClampedArray(16) [ 0, 63, 148, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = Uint16Array(8) [ 16128, 31380, 18401, 5294, 123, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = Uint32Array(4) [ 2056535808, 346965985, 123, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]).not.toBytesEqual(expected = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"data\\": [63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0], \\"type\\": \\"Buffer\\"}</>
Received:     <red>[-31681, -7814, -20921, 31508, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]).not.toBytesEqual(expected = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[]</>
Received:     <red>[-31681, -7814, -20921, 31508, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]).not.toBytesEqual(expected = BigInt64Array(2) [ 8868905189948163135n, 0n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>
Received:     <red>[-31681, -7814, -20921, 31508, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]).not.toBytesEqual(expected = BigUint64Array(2) [ 8868905189948163135n, 0n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>
Received:     <red>[-31681, -7814, -20921, 31508, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]).not.toBytesEqual(expected = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[]</>
Received:     <red>[-31681, -7814, -20921, 31508, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-288825959610245450000, 7.719946995337284e+35, 0, 0]</>
Received:     <red>[-31681, -7814, -20921, 31508, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Float64Array(2) [ 7.688168988724143e+284, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[7.688168988724143e+284, 0]</>
Received:     <red>[-31681, -7814, -20921, 31508, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>[-31681, -7814, -20921, 31508, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-31681, -7814, -20921, 31508, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-512064449, 2064952903, 0, 0]</>
Received:     <red>[-31681, -7814, -20921, 31508, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>[-31681, -7814, -20921, 31508, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>[-31681, -7814, -20921, 31508, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[33855, 57722, 44615, 31508, 0, 0, 0, 0]</>
Received:     <red>[-31681, -7814, -20921, 31508, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[3782902847, 2064952903, 0, 0]</>
Received:     <red>[-31681, -7814, -20921, 31508, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]).toBytesEqual(expected = <Buffer 00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]).toBytesEqual(expected = ArrayBuffer { [Uint8Contents]: <00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>, byteLength: 16 }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]).toBytesEqual(expected = BigInt64Array(2) [ 1490207560455962368n, 123n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]).toBytesEqual(expected = BigUint64Array(2) [ 1490207560455962368n, 123n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]).toBytesEqual(expected = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>, byteLength: 16 } }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]).toBytesEqual(expected = Float32Array(4) [ 3.848688634340923e+35, 1.759786131060771e-26, 1.723597111119525e-43, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]).toBytesEqual(expected = Float64Array(2) [ 4.6053234898221557e-209, 6.1e-322 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]).toBytesEqual(expected = Int8Array(16) [ 0, 63, -108, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]).toBytesEqual(expected = Int16Array(8) [ 16128, 31380, 18401, 5294, 123, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]).toBytesEqual(expected = Int32Array(4) [ 2056535808, 346965985, 123, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]).toBytesEqual(expected = Uint8Array(16) [ 0, 63, 148, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]).toBytesEqual(expected = Uint8ClampedArray(16) [ 0, 63, 148, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]).toBytesEqual(expected = Uint16Array(8) [ 16128, 31380, 18401, 5294, 123, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]).toBytesEqual(expected = Uint32Array(4) [ 2056535808, 346965985, 123, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]).not.toBytesEqual(expected = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"data\\": [63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0], \\"type\\": \\"Buffer\\"}</>
Received:     <red>[-512064449, 2064952903, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]).not.toBytesEqual(expected = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[]</>
Received:     <red>[-512064449, 2064952903, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]).not.toBytesEqual(expected = BigInt64Array(2) [ 8868905189948163135n, 0n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>
Received:     <red>[-512064449, 2064952903, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]).not.toBytesEqual(expected = BigUint64Array(2) [ 8868905189948163135n, 0n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>
Received:     <red>[-512064449, 2064952903, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]).not.toBytesEqual(expected = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[]</>
Received:     <red>[-512064449, 2064952903, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]).not.toBytesEqual(expected = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-288825959610245450000, 7.719946995337284e+35, 0, 0]</>
Received:     <red>[-512064449, 2064952903, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]).not.toBytesEqual(expected = Float64Array(2) [ 7.688168988724143e+284, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[7.688168988724143e+284, 0]</>
Received:     <red>[-512064449, 2064952903, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]).not.toBytesEqual(expected = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>[-512064449, 2064952903, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]).not.toBytesEqual(expected = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-31681, -7814, -20921, 31508, 0, 0, 0, 0]</>
Received:     <red>[-512064449, 2064952903, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]).not.toBytesEqual(expected = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-512064449, 2064952903, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]).not.toBytesEqual(expected = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>[-512064449, 2064952903, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]).not.toBytesEqual(expected = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>[-512064449, 2064952903, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]).not.toBytesEqual(expected = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[33855, 57722, 44615, 31508, 0, 0, 0, 0]</>
Received:     <red>[-512064449, 2064952903, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]).not.toBytesEqual(expected = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[3782902847, 2064952903, 0, 0]</>
Received:     <red>[-512064449, 2064952903, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]).toBytesEqual(expected = <Buffer 00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]).toBytesEqual(expected = ArrayBuffer { [Uint8Contents]: <00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>, byteLength: 16 }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]).toBytesEqual(expected = BigInt64Array(2) [ 1490207560455962368n, 123n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]).toBytesEqual(expected = BigUint64Array(2) [ 1490207560455962368n, 123n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]).toBytesEqual(expected = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>, byteLength: 16 } }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]).toBytesEqual(expected = Float32Array(4) [ 3.848688634340923e+35, 1.759786131060771e-26, 1.723597111119525e-43, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]).toBytesEqual(expected = Float64Array(2) [ 4.6053234898221557e-209, 6.1e-322 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]).toBytesEqual(expected = Int8Array(16) [ 0, 63, -108, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]).toBytesEqual(expected = Int16Array(8) [ 16128, 31380, 18401, 5294, 123, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]).toBytesEqual(expected = Int32Array(4) [ 2056535808, 346965985, 123, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]).toBytesEqual(expected = Uint8Array(16) [ 0, 63, 148, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]).toBytesEqual(expected = Uint8ClampedArray(16) [ 0, 63, 148, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]).toBytesEqual(expected = Uint16Array(8) [ 16128, 31380, 18401, 5294, 123, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]).toBytesEqual(expected = Uint32Array(4) [ 2056535808, 346965985, 123, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"data\\": [63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0], \\"type\\": \\"Buffer\\"}</>
Received:     <red>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[]</>
Received:     <red>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = BigInt64Array(2) [ 8868905189948163135n, 0n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>
Received:     <red>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = BigUint64Array(2) [ 8868905189948163135n, 0n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>
Received:     <red>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[]</>
Received:     <red>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-288825959610245450000, 7.719946995337284e+35, 0, 0]</>
Received:     <red>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Float64Array(2) [ 7.688168988724143e+284, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[7.688168988724143e+284, 0]</>
Received:     <red>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-31681, -7814, -20921, 31508, 0, 0, 0, 0]</>
Received:     <red>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-512064449, 2064952903, 0, 0]</>
Received:     <red>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[33855, 57722, 44615, 31508, 0, 0, 0, 0]</>
Received:     <red>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[3782902847, 2064952903, 0, 0]</>
Received:     <red>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = <Buffer 00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = ArrayBuffer { [Uint8Contents]: <00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>, byteLength: 16 }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = BigInt64Array(2) [ 1490207560455962368n, 123n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = BigUint64Array(2) [ 1490207560455962368n, 123n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>, byteLength: 16 } }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = Float32Array(4) [ 3.848688634340923e+35, 1.759786131060771e-26, 1.723597111119525e-43, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = Float64Array(2) [ 4.6053234898221557e-209, 6.1e-322 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = Int8Array(16) [ 0, 63, -108, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = Int16Array(8) [ 16128, 31380, 18401, 5294, 123, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = Int32Array(4) [ 2056535808, 346965985, 123, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = Uint8Array(16) [ 0, 63, 148, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = Uint8ClampedArray(16) [ 0, 63, 148, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = Uint16Array(8) [ 16128, 31380, 18401, 5294, 123, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = Uint32Array(4) [ 2056535808, 346965985, 123, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"data\\": [63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0], \\"type\\": \\"Buffer\\"}</>
Received:     <red>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[]</>
Received:     <red>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = BigInt64Array(2) [ 8868905189948163135n, 0n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>
Received:     <red>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = BigUint64Array(2) [ 8868905189948163135n, 0n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>
Received:     <red>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[]</>
Received:     <red>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-288825959610245450000, 7.719946995337284e+35, 0, 0]</>
Received:     <red>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Float64Array(2) [ 7.688168988724143e+284, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[7.688168988724143e+284, 0]</>
Received:     <red>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-31681, -7814, -20921, 31508, 0, 0, 0, 0]</>
Received:     <red>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-512064449, 2064952903, 0, 0]</>
Received:     <red>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[33855, 57722, 44615, 31508, 0, 0, 0, 0]</>
Received:     <red>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[3782902847, 2064952903, 0, 0]</>
Received:     <red>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = <Buffer 00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = ArrayBuffer { [Uint8Contents]: <00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>, byteLength: 16 }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = BigInt64Array(2) [ 1490207560455962368n, 123n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = BigUint64Array(2) [ 1490207560455962368n, 123n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>, byteLength: 16 } }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = Float32Array(4) [ 3.848688634340923e+35, 1.759786131060771e-26, 1.723597111119525e-43, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = Float64Array(2) [ 4.6053234898221557e-209, 6.1e-322 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = Int8Array(16) [ 0, 63, -108, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = Int16Array(8) [ 16128, 31380, 18401, 5294, 123, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = Int32Array(4) [ 2056535808, 346965985, 123, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = Uint8Array(16) [ 0, 63, 148, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = Uint8ClampedArray(16) [ 0, 63, 148, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = Uint16Array(8) [ 16128, 31380, 18401, 5294, 123, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]).toBytesEqual(expected = Uint32Array(4) [ 2056535808, 346965985, 123, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]).not.toBytesEqual(expected = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"data\\": [63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0], \\"type\\": \\"Buffer\\"}</>
Received:     <red>[33855, 57722, 44615, 31508, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]).not.toBytesEqual(expected = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[]</>
Received:     <red>[33855, 57722, 44615, 31508, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]).not.toBytesEqual(expected = BigInt64Array(2) [ 8868905189948163135n, 0n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>
Received:     <red>[33855, 57722, 44615, 31508, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]).not.toBytesEqual(expected = BigUint64Array(2) [ 8868905189948163135n, 0n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>
Received:     <red>[33855, 57722, 44615, 31508, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]).not.toBytesEqual(expected = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[]</>
Received:     <red>[33855, 57722, 44615, 31508, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-288825959610245450000, 7.719946995337284e+35, 0, 0]</>
Received:     <red>[33855, 57722, 44615, 31508, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Float64Array(2) [ 7.688168988724143e+284, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[7.688168988724143e+284, 0]</>
Received:     <red>[33855, 57722, 44615, 31508, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>[33855, 57722, 44615, 31508, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-31681, -7814, -20921, 31508, 0, 0, 0, 0]</>
Received:     <red>[33855, 57722, 44615, 31508, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-512064449, 2064952903, 0, 0]</>
Received:     <red>[33855, 57722, 44615, 31508, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>[33855, 57722, 44615, 31508, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>[33855, 57722, 44615, 31508, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[33855, 57722, 44615, 31508, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]).not.toBytesEqual(expected = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[3782902847, 2064952903, 0, 0]</>
Received:     <red>[33855, 57722, 44615, 31508, 0, 0, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]).toBytesEqual(expected = <Buffer 00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]).toBytesEqual(expected = ArrayBuffer { [Uint8Contents]: <00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>, byteLength: 16 }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]).toBytesEqual(expected = BigInt64Array(2) [ 1490207560455962368n, 123n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]).toBytesEqual(expected = BigUint64Array(2) [ 1490207560455962368n, 123n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]).toBytesEqual(expected = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>, byteLength: 16 } }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]).toBytesEqual(expected = Float32Array(4) [ 3.848688634340923e+35, 1.759786131060771e-26, 1.723597111119525e-43, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]).toBytesEqual(expected = Float64Array(2) [ 4.6053234898221557e-209, 6.1e-322 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]).toBytesEqual(expected = Int8Array(16) [ 0, 63, -108, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]).toBytesEqual(expected = Int16Array(8) [ 16128, 31380, 18401, 5294, 123, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]).toBytesEqual(expected = Int32Array(4) [ 2056535808, 346965985, 123, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]).toBytesEqual(expected = Uint8Array(16) [ 0, 63, 148, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]).toBytesEqual(expected = Uint8ClampedArray(16) [ 0, 63, 148, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]).toBytesEqual(expected = Uint16Array(8) [ 16128, 31380, 18401, 5294, 123, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]).toBytesEqual(expected = Uint32Array(4) [ 2056535808, 346965985, 123, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]).not.toBytesEqual(expected = <Buffer 3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"data\\": [63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0], \\"type\\": \\"Buffer\\"}</>
Received:     <red>[3782902847, 2064952903, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]).not.toBytesEqual(expected = ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[]</>
Received:     <red>[3782902847, 2064952903, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]).not.toBytesEqual(expected = BigInt64Array(2) [ 8868905189948163135n, 0n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>
Received:     <red>[3782902847, 2064952903, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]).not.toBytesEqual(expected = BigUint64Array(2) [ 8868905189948163135n, 0n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>{\\"0\\": 8868905189948163135n, \\"1\\": 0n}</>
Received:     <red>[3782902847, 2064952903, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]).not.toBytesEqual(expected = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <3f 84 7a e1 47 ae 14 7b 00 00 00 00 00 00 00 00>, byteLength: 16 } }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[]</>
Received:     <red>[3782902847, 2064952903, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]).not.toBytesEqual(expected = Float32Array(4) [ -288825959610245450000, 7.719946995337284e+35, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-288825959610245450000, 7.719946995337284e+35, 0, 0]</>
Received:     <red>[3782902847, 2064952903, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]).not.toBytesEqual(expected = Float64Array(2) [ 7.688168988724143e+284, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[7.688168988724143e+284, 0]</>
Received:     <red>[3782902847, 2064952903, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]).not.toBytesEqual(expected = Int8Array(16) [ 63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, -124, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>[3782902847, 2064952903, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]).not.toBytesEqual(expected = Int16Array(8) [ -31681, -7814, -20921, 31508, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-31681, -7814, -20921, 31508, 0, 0, 0, 0]</>
Received:     <red>[3782902847, 2064952903, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]).not.toBytesEqual(expected = Int32Array(4) [ -512064449, 2064952903, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[-512064449, 2064952903, 0, 0]</>
Received:     <red>[3782902847, 2064952903, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]).not.toBytesEqual(expected = Uint8Array(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>[3782902847, 2064952903, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]).not.toBytesEqual(expected = Uint8ClampedArray(16) [ 63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[63, 132, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0, 0]</>
Received:     <red>[3782902847, 2064952903, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]).not.toBytesEqual(expected = Uint16Array(8) [ 33855, 57722, 44615, 31508, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[33855, 57722, 44615, 31508, 0, 0, 0, 0]</>
Received:     <red>[3782902847, 2064952903, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]).not.toBytesEqual(expected = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>not<dim>.</>toBytesEqual<dim>(</><green>expected</><dim>)</>

Expected: not <green>[3782902847, 2064952903, 0, 0]</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]).toBytesEqual(expected = <Buffer 00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]).toBytesEqual(expected = ArrayBuffer { [Uint8Contents]: <00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>, byteLength: 16 }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]).toBytesEqual(expected = BigInt64Array(2) [ 1490207560455962368n, 123n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]).toBytesEqual(expected = BigUint64Array(2) [ 1490207560455962368n, 123n ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]).toBytesEqual(expected = DataView { byteLength: 16, byteOffset: 0, buffer: ArrayBuffer { [Uint8Contents]: <00 3f 94 7a e1 47 ae 14 7b 00 00 00 00 00 00 00>, byteLength: 16 } }) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]).toBytesEqual(expected = Float32Array(4) [ 3.848688634340923e+35, 1.759786131060771e-26, 1.723597111119525e-43, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]).toBytesEqual(expected = Float64Array(2) [ 4.6053234898221557e-209, 6.1e-322 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]).toBytesEqual(expected = Int8Array(16) [ 0, 63, -108, 122, -31, 71, -82, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]).toBytesEqual(expected = Int16Array(8) [ 16128, 31380, 18401, 5294, 123, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]).toBytesEqual(expected = Int32Array(4) [ 2056535808, 346965985, 123, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]).toBytesEqual(expected = Uint8Array(16) [ 0, 63, 148, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]).toBytesEqual(expected = Uint8ClampedArray(16) [ 0, 63, 148, 122, 225, 71, 174, 20, 123, 0, 0, 0, 0, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]).toBytesEqual(expected = Uint16Array(8) [ 16128, 31380, 18401, 5294, 123, 0, 0, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;

exports[`.toBytesEqual() fail expect(actual = Uint32Array(4) [ 3782902847, 2064952903, 0, 0 ]).toBytesEqual(expected = Uint32Array(4) [ 2056535808, 346965985, 123, 0 ]) 1`] = `
"<dim>expect(</><red>received</><dim>).</>toBytesEqual<dim>(</><green>expected</><dim>)</>

<green>- Expected  - 2</>
<red>+ Received  + 2</>

<yellow>@@ -1,15 +1,15 @@</>
<dim>  <</>
<green>-   00: 0x00,</>
<dim>    00: 0x3F,</>
<green>-   02: 0x94,</>
<red>+   01: 0x84,</>
<dim>    02: 0x7A,</>
<dim>    03: 0xE1,</>
<dim>    04: 0x47,</>
<dim>    05: 0xAE,</>
<dim>    06: 0x14,</>
<dim>    07: 0x7B,</>
<red>+   08: 0x00,</>
<dim>    09: 0x00,</>
<dim>    10: 0x00,</>
<dim>    11: 0x00,</>
<dim>    12: 0x00,</>
<dim>    13: 0x00,</>"
`;
